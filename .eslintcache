[{"F:\\Projects\\Major Project\\major_project\\src\\index.js":"1","F:\\Projects\\Major Project\\major_project\\src\\App.js":"2","F:\\Projects\\Major Project\\major_project\\src\\reportWebVitals.js":"3","F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Layout\\Layout.js":"4","F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Auxiliary\\Auxiliary.js":"5","F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"6","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\Register.js":"7","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\FormSignUp.js":"8","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\useForm.js":"9","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\validateInfo.js":"10","F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\Home.js":"11","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\Login.js":"12","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\FormSignIn.js":"13","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\useForm.js":"14","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\validateInfo.js":"15","F:\\Projects\\Major Project\\major_project\\src\\components\\News\\news.js":"16","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\products.js":"17","F:\\Projects\\Major Project\\major_project\\src\\utilities\\history\\history.js":"18","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\Profile.js":"19","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\validateInfo.js":"20","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\useForm.js":"21","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductDetails.js":"22","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductContent\\ProductContent.js":"23"},{"size":500,"mtime":1612247018060,"results":"24","hashOfConfig":"25"},{"size":2715,"mtime":1614663357706,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":562,"mtime":1612436932596,"results":"28","hashOfConfig":"25"},{"size":60,"mtime":1611512585658,"results":"29","hashOfConfig":"25"},{"size":3815,"mtime":1614321964943,"results":"30","hashOfConfig":"25"},{"size":1986,"mtime":1614324072112,"results":"31","hashOfConfig":"25"},{"size":4740,"mtime":1614076834838,"results":"32","hashOfConfig":"25"},{"size":2857,"mtime":1614324409851,"results":"33","hashOfConfig":"25"},{"size":980,"mtime":1614017706808,"results":"34","hashOfConfig":"25"},{"size":769,"mtime":1613818395799,"results":"35","hashOfConfig":"25"},{"size":2083,"mtime":1614319712398,"results":"36","hashOfConfig":"25"},{"size":2364,"mtime":1612439854196,"results":"37","hashOfConfig":"25"},{"size":2361,"mtime":1614325529430,"results":"38","hashOfConfig":"25"},{"size":358,"mtime":1612325857192,"results":"39","hashOfConfig":"25"},{"size":2490,"mtime":1614674132420,"results":"40","hashOfConfig":"25"},{"size":4513,"mtime":1614665349302,"results":"41","hashOfConfig":"25"},{"size":117,"mtime":1614099669593,"results":"42","hashOfConfig":"25"},{"size":6169,"mtime":1614324013875,"results":"43","hashOfConfig":"25"},{"size":980,"mtime":1614271262049,"results":"44","hashOfConfig":"25"},{"size":2416,"mtime":1614271249370,"results":"45","hashOfConfig":"25"},{"size":2355,"mtime":1614665783741,"results":"46","hashOfConfig":"25"},{"size":1499,"mtime":1614666558191,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1xx4rqi",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\Major Project\\major_project\\src\\index.js",[],["101","102"],"F:\\Projects\\Major Project\\major_project\\src\\App.js",[],"F:\\Projects\\Major Project\\major_project\\src\\reportWebVitals.js",[],"F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Layout\\Layout.js",[],"F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Auxiliary\\Auxiliary.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Toolbar\\Toolbar.js",["103","104","105","106","107","108","109","110","111","112","113"],"import React, { useState, useEffect } from 'react';\r\nimport Aux from '../../../containers/hoc/Auxiliary/Auxiliary';\r\nimport Logo from '../../../assets/images/newLogo1.png'\r\nimport classes from './Toolbar.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {AuthContext} from \"../../../App\";\r\n\r\nfunction Toolbar(props){\r\n  const {state,dispatch} = React.useContext(AuthContext);\r\n\r\n  const [hamburger,setHamburger] = useState(true);\r\n\r\n   let [navLinksClass,setNavlinksClass] = useState(classes[\"NavLinks\"]);\r\n   let [linkClass,setLinkClass] = useState(\"\");\r\n\r\n   const hamburgerHandler = () => {\r\n     console.log(\"hamburger click\")\r\n     setHamburger(!hamburger)\r\n\r\n   }\r\n\r\n   useEffect(() => {\r\n     console.log(\"using effect\",dispatch({}),state)\r\n     if(hamburger){\r\n      setNavlinksClass(classes[\"NavLinks\"]);\r\n      setLinkClass(\"\");\r\n     }else{\r\n      setNavlinksClass([classes[\"NavLinks\"],classes[\"NavLinksOpen\"]].join(' '))\r\n      setLinkClass(classes[\"Fade\"]);\r\n     }\r\n   }, [hamburger])\r\n\r\n        return(\r\n            <Aux>\r\n              {console.log(\"toolbar state\",state)}\r\n              {console.log(\"props\",props)}\r\n                <nav className={classes[\"NavBar\"]}>\r\n                    <Link to=\"/\" style={{height:\"100%\"}}>\r\n                        <img src={Logo} className={classes[\"Logo\"]}></img>\r\n                    </Link>\r\n                    <p className={classes[\"WebsiteName\"]}>Website Name</p>\r\n                    <div className={classes[\"Hamburger\"]} onClick={hamburgerHandler}>\r\n                        <div className={classes[\"Line\"]}></div>\r\n                        <div className={classes[\"Line\"]}></div>\r\n                        <div className={classes[\"Line\"]}></div>\r\n                    </div>\r\n                    <ul className={navLinksClass} onClick={hamburgerHandler}>\r\n                        <Link to=\"/\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"home\" className={linkClass}><a>Home</a></li>\r\n                        </Link>\r\n                        <Link to=\"/products\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"products\" className={linkClass}><a>Products</a></li>\r\n                        </Link>\r\n                        <Link to=\"/news\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"news\" className={linkClass}><a>News</a></li>\r\n                        </Link>\r\n                        <Link to=\"/about\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"about\" className={linkClass}><a>About</a></li>\r\n                        </Link>\r\n                        <Link to=\"/contact\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"contact\" className={linkClass}><a>Contact Us</a></li>\r\n                        </Link>\r\n                        {!(state.isAuthenticated) ? (<><Link to=\"/register\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"register\" className={linkClass}><a>Register</a></li>\r\n                        </Link>\r\n                        <Link to=\"/login\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"login\" className={linkClass}><a>Login</a></li>\r\n                        </Link></>) : (<>\r\n                        <Link to=\"/profile\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"register\" className={linkClass}><a>Profile</a></li>\r\n                        </Link>\r\n                        <Link to=\"/logout\" className={classes[\"RouterLink\"]}>\r\n                          <li key=\"login\" className={linkClass}><a>LogOut</a></li>\r\n                        </Link>\r\n                        </>)}\r\n                    </ul>\r\n                </nav>\r\n                {props.children}\r\n            </Aux>\r\n        )\r\n}\r\n\r\nexport default Toolbar;","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\Register.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\FormSignUp.js",["114"],"import React, {useState} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './register.module.css';\r\n\r\nconst SignUp = ({submitForm}) => {\r\n        const {handleChange,values,handleSubmit,errors} = useForm(submitForm,validate);\r\n        return (\r\n            <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                    <h1 style={{textAlign:\"center\"}}>REGISTER</h1>\r\n                    <hr className={classes[\"hr\"]}/>\r\n                    <div>\r\n                        <label htmlFor=\"username\"  >\r\n                             <b style={{fontSize:'25px'}}>Username</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your username\"\r\n                            value={values.username}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.username && <p className={classes[\"warning\"]}>{errors.username}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\" >\r\n                             <b style={{fontSize:'25px'}}>Email</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your email\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.email && <p className={classes[\"warning\"]}>{errors.email}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"phoneNo\" >\r\n                             <b style={{fontSize:'25px'}}>Phone No</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"phoneNo\"\r\n                            type=\"number\"\r\n                            name=\"phoneNo\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your Phone Number\"\r\n                            value={values.phoneNo}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.phoneNo && <p className={classes[\"warning\"]}>{errors.phoneNo}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\" >\r\n                             <b style={{fontSize:'25px'}}>Password</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your password\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password && <p className={classes[\"warning\"]}>{errors.password}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"password2\" >\r\n                             <b style={{fontSize:'25px'}}>Confirm Password</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"password2\"\r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Confirm your password\"\r\n                            value={values.password2}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password2 && <p className={classes[\"warning\"]}>{errors.password2}</p>}\r\n                    </div>\r\n                    <button type=\"submit\" className={classes[\"registerbtn\"]}>\r\n                        Sign Up\r\n                    </button>\r\n                    <span type=\"submit\" >\r\n                        <p style={{textAlign:\"center\"}}>Already have an account? <Link to=\"/login\">LOGIN</Link></p> \r\n                    </span>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default SignUp;","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\useForm.js",["115"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../App';\r\n\r\nconst useForm = (callback,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phoneNo: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const {dispatch} = React.useContext(AuthContext)\r\n    \r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          console.log('env',process.env)\r\n            fetch(`${process.env.REACT_APP_API_URL}/auth/register`,{\r\n                method: 'POST',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                  name : values.username,\r\n                  email : values.email,\r\n                  phoneNo : values.phoneNo,\r\n                  password : values.password\r\n                })\r\n              }).then(async (res) => {\r\n                if(res.ok){\r\n                  return res.json();\r\n                }\r\n                console.log(\"res\",res);\r\n                if(res.status === 403){\r\n                   await res.json().then(data => {\r\n                     if(data.error === \"email\"){\r\n                        setError({email: \"Email already in use\"})   \r\n                        return 'error'                    \r\n                     }else if(data.error === \"phoneNo\"){\r\n                       setError({phoneNo: \"Phone Number already in use\"})\r\n                       return 'error'\r\n                     }\r\n                     console.log(\"resData\",data);\r\n                   })\r\n                }\r\n                return 'error'\r\n              })\r\n              .then(data => {\r\n                if(data !== 'error'){\r\n                  console.log(\"data\",data);\r\n                  Cookies.set('token', data, { expires: 1 })\r\n                  dispatch({\r\n                    type: \"LOGIN\",\r\n                    payload: {\r\n                      isAuthenticated: true,\r\n                      user: {\r\n                        name: values.username,\r\n                        email: values.email\r\n                      }\r\n                    }\r\n                  })\r\n                  callback();\r\n                }\r\n              })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\Home.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\Login.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\FormSignIn.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\useForm.js",["116"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../App'\r\n\r\nconst useForm = (callback,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    const {dispatch} = React.useContext(AuthContext);\r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n            fetch(`${process.env.REACT_APP_API_URL}/auth/login`,{\r\n                method: 'POST',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                  email : values.email,\r\n                  password : values.password\r\n                })\r\n              }).then(res => {\r\n                console.log(\"res\",res);\r\n                if(res.status === 400){\r\n                   return {error:{\r\n                       password: 'Invalid credentials'\r\n                   }}\r\n                }\r\n                return res.json();\r\n              })\r\n              .then(data => {\r\n                if(data.error && data.error.password){\r\n                    setError({password: data.error.password})\r\n                }else{\r\n                    console.log(\"data\",data);\r\n                    Cookies.set('token', data, { expires: 1 })\r\n                    dispatch({\r\n                        type: \"LOGIN\",\r\n                        payload: {\r\n                          isAuthenticated: true,\r\n                          user: {\r\n                            name: data.username,\r\n                            email: data.email\r\n                          }\r\n                        }\r\n                      })\r\n                    callback();\r\n                }\r\n              })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\News\\news.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\products\\products.js",["117","118","119","120","121","122","123","124"],"F:\\Projects\\Major Project\\major_project\\src\\utilities\\history\\history.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\Profile.js",["125","126"],"import React, {useState} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './profile.module.css';\r\n\r\nconst Profile = ({submitForm}) => {\r\n        const {handleChange,values,handleSubmit,errors} = useForm(submitForm,validate);\r\n        return (\r\n            <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                <h1 style={{textAlign:\"center\"}}>PROFILE</h1><br />\r\n                <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                    <div>\r\n                        <label htmlFor=\"username\"  >\r\n                             <b style={{fontSize:'25px'}}>Username</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your username\"\r\n                            value={\"Bhargav\"}\r\n                            onChange={handleChange}\r\n                            disabled\r\n                        />\r\n                        {errors.username && <p className={classes[\"warning\"]}>{errors.username}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\" >\r\n                             <b style={{fontSize:'25px'}}>Email</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your email\"\r\n                            value={\"bhargavnakkina462@gmail.com\"}\r\n                            onChange={handleChange}\r\n                            disabled\r\n                        />\r\n                        {errors.email && <p className={classes[\"warning\"]}>{errors.email}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"phoneNo\" >\r\n                             <b style={{fontSize:'25px'}}>Phone No</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"phoneNo\"\r\n                            type=\"number\"\r\n                            name=\"phoneNo\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your Phone Number\"\r\n                            value={values.phoneNo}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.phoneNo && <p className={classes[\"warning\"]}>{errors.phoneNo}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"HouseNo\" >\r\n                             <b style={{fontSize:'25px'}}>House No</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"HouseNo\"\r\n                            type=\"text\"\r\n                            name=\"HouseNo\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your House No\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password && <p className={classes[\"warning\"]}>{errors.password}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"landmark\" >\r\n                             <b style={{fontSize:'25px'}}>Landmark</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"landmark\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your landmark\"\r\n                            value={values.password2}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password2 && <p className={classes[\"warning\"]}>{errors.password2}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"district\" >\r\n                             <b style={{fontSize:'25px'}}>District</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"district\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your District\"\r\n                            value={values.password2}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password2 && <p className={classes[\"warning\"]}>{errors.password2}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"State\" >\r\n                             <b style={{fontSize:'25px'}}>State</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"State\"\r\n                            type=\"text\"\r\n                            name=\"State\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your State\"\r\n                            value={values.password2}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password2 && <p className={classes[\"warning\"]}>{errors.password2}</p>}\r\n                    </div>\r\n                    <div></div>\r\n                    <button type=\"submit\" className={classes[\"registerbtn\"]} style={{textAlign:\"center\",alignItems:'center',justifyContent:'center',marginLeft:'auto',marginRight:'auto'}}>\r\n                        Update\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Profile;","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\useForm.js",["127"],"import {useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst useForm = (callback,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phoneNo: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n\r\n    \r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          console.log('env',process.env)\r\n            fetch(`${process.env.REACT_APP_API_URL}/auth/register`,{\r\n                method: 'POST',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                  name : values.username,\r\n                  email : values.email,\r\n                  phoneNo : values.phoneNo,\r\n                  password : values.password\r\n                })\r\n              }).then(async (res) => {\r\n                if(res.ok){\r\n                  return res.json();\r\n                }\r\n                console.log(\"res\",res);\r\n                if(res.status === 403){\r\n                   await res.json().then(data => {\r\n                     if(data.error === \"email\"){\r\n                        setError({email: \"Email already in use\"})   \r\n                        return 'error'                    \r\n                     }else if(data.error === \"phoneNo\"){\r\n                       setError({phoneNo: \"Phone Number already in use\"})\r\n                       return 'error'\r\n                     }\r\n                     console.log(\"resData\",data);\r\n                   })\r\n                }\r\n                return 'error'\r\n              })\r\n              .then(data => {\r\n                if(data !== 'error'){\r\n                  console.log(\"data\",data);\r\n                  Cookies.set('token', data, { expires: 1 })\r\n                  callback();\r\n                }\r\n              })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductDetails.js",["128"],"F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductContent\\ProductContent.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":31,"column":7,"nodeType":"135","endLine":31,"endColumn":18,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":39,"column":25,"nodeType":"139","endLine":39,"endColumn":69},{"ruleId":"140","severity":1,"message":"141","line":49,"column":64,"nodeType":"139","endLine":49,"endColumn":67},{"ruleId":"140","severity":1,"message":"141","line":52,"column":68,"nodeType":"139","endLine":52,"endColumn":71},{"ruleId":"140","severity":1,"message":"141","line":55,"column":64,"nodeType":"139","endLine":55,"endColumn":67},{"ruleId":"140","severity":1,"message":"141","line":58,"column":65,"nodeType":"139","endLine":58,"endColumn":68},{"ruleId":"140","severity":1,"message":"141","line":61,"column":67,"nodeType":"139","endLine":61,"endColumn":70},{"ruleId":"140","severity":1,"message":"141","line":64,"column":68,"nodeType":"139","endLine":64,"endColumn":71},{"ruleId":"140","severity":1,"message":"141","line":67,"column":65,"nodeType":"139","endLine":67,"endColumn":68},{"ruleId":"140","severity":1,"message":"141","line":70,"column":68,"nodeType":"139","endLine":70,"endColumn":71},{"ruleId":"140","severity":1,"message":"141","line":73,"column":65,"nodeType":"139","endLine":73,"endColumn":68},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"146","line":85,"column":7,"nodeType":"135","endLine":85,"endColumn":15,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"148","line":71,"column":7,"nodeType":"135","endLine":71,"endColumn":15,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":17,"column":29,"nodeType":"139","endLine":17,"endColumn":67},{"ruleId":"150","severity":1,"message":"151","line":29,"column":23,"nodeType":"139","endLine":29,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":41,"column":23,"nodeType":"139","endLine":41,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":53,"column":23,"nodeType":"139","endLine":53,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":66,"column":29,"nodeType":"139","endLine":66,"endColumn":67},{"ruleId":"150","severity":1,"message":"151","line":78,"column":23,"nodeType":"139","endLine":78,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":90,"column":23,"nodeType":"139","endLine":90,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":102,"column":23,"nodeType":"139","endLine":102,"endColumn":61},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"152","line":4,"column":9,"nodeType":"144","messageId":"145","endLine":4,"endColumn":13},{"ruleId":"133","severity":1,"message":"153","line":74,"column":7,"nodeType":"135","endLine":74,"endColumn":15,"suggestions":"154"},{"ruleId":"137","severity":1,"message":"138","line":51,"column":37,"nodeType":"139","endLine":51,"endColumn":86},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'callback', 'dispatch', 'isSubmitting', 'values.email', 'values.password', 'values.phoneNo', and 'values.username'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"React Hook useEffect has missing dependencies: 'callback', 'dispatch', 'isSubmitting', 'values.email', and 'values.password'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'callback', 'isSubmitting', 'values.email', 'values.password', 'values.phoneNo', and 'values.username'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch, hamburger, state]",{"range":"169","text":"170"},"Update the dependencies array to be: [callback, dispatch, errors, isSubmitting, values.email, values.password, values.phoneNo, values.username]",{"range":"171","text":"172"},"Update the dependencies array to be: [callback, dispatch, errors, isSubmitting, values.email, values.password]",{"range":"173","text":"174"},"Update the dependencies array to be: [callback, errors, isSubmitting, values.email, values.password, values.phoneNo, values.username]",{"range":"175","text":"176"},[997,1008],"[dispatch, hamburger, state]",[2761,2769],"[callback, dispatch, errors, isSubmitting, values.email, values.password, values.phoneNo, values.username]",[2265,2273],"[callback, dispatch, errors, isSubmitting, values.email, values.password]",[2320,2328],"[callback, errors, isSubmitting, values.email, values.password, values.phoneNo, values.username]"]