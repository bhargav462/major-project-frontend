[{"F:\\Projects\\Major Project\\major_project\\src\\index.js":"1","F:\\Projects\\Major Project\\major_project\\src\\App.js":"2","F:\\Projects\\Major Project\\major_project\\src\\reportWebVitals.js":"3","F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Layout\\Layout.js":"4","F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Auxiliary\\Auxiliary.js":"5","F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"6","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\Register.js":"7","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\FormSignUp.js":"8","F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\Home.js":"9","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\Login.js":"10","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\FormSignIn.js":"11","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\useForm.js":"12","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\validateInfo.js":"13","F:\\Projects\\Major Project\\major_project\\src\\components\\News\\news.js":"14","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\products.js":"15","F:\\Projects\\Major Project\\major_project\\src\\utilities\\history\\history.js":"16","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\Profile.js":"17","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\validateInfo.js":"18","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\useForm.js":"19","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductDetails.js":"20","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductContent\\ProductContent.js":"21","F:\\Projects\\Major Project\\major_project\\src\\utilities\\userData\\userData.js":"22","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\addCrop.js":"23","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\useForm\\useForm.js":"24","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\useForm\\validateInfo.js":"25","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\useForm.js":"26","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\validateInfo.js":"27","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\updateCrop.js":"28","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\useForm\\validateInfo.js":"29","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\useForm\\useForm.js":"30","F:\\Projects\\Major Project\\major_project\\src\\utilities\\enums\\userTypes.js":"31","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\deleteCrop.js":"32","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\useForm\\useForm.js":"33","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\useForm\\validateInfo.js":"34","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\farmerProducts\\farmerProducts.js":"35","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\showCrop\\showCrop.js":"36","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\showCrop\\cropContent\\cropContent.js":"37","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\ProductFilter\\ProductFilter.js":"38","F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\userCounter\\userCounter.js":"39","F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Footer\\Footer.js":"40","F:\\Projects\\Major Project\\major_project\\src\\components\\about\\about.js":"41","F:\\Projects\\Major Project\\major_project\\src\\components\\contact\\contact.js":"42","F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\corousal\\corousal.js":"43","F:\\Projects\\Major Project\\major_project\\src\\components\\News\\NewsFilter\\NewsFilter.js":"44"},{"size":500,"mtime":1612247018060,"results":"45","hashOfConfig":"46"},{"size":3642,"mtime":1621935493737,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":562,"mtime":1612436932596,"results":"49","hashOfConfig":"50"},{"size":60,"mtime":1611512585658,"results":"51","hashOfConfig":"46"},{"size":6173,"mtime":1621939530763,"results":"52","hashOfConfig":"46"},{"size":3546,"mtime":1621694616521,"results":"53","hashOfConfig":"46"},{"size":4919,"mtime":1621941653597,"results":"54","hashOfConfig":"46"},{"size":9277,"mtime":1644768165886,"results":"55","hashOfConfig":"46"},{"size":3725,"mtime":1621694674247,"results":"56","hashOfConfig":"46"},{"size":2490,"mtime":1619853388812,"results":"57","hashOfConfig":"46"},{"size":2797,"mtime":1621941792109,"results":"58","hashOfConfig":"46"},{"size":358,"mtime":1612325857192,"results":"59","hashOfConfig":"46"},{"size":2268,"mtime":1621941428724,"results":"60","hashOfConfig":"46"},{"size":4593,"mtime":1644771923974,"results":"61","hashOfConfig":"46"},{"size":117,"mtime":1614099669593,"results":"62","hashOfConfig":"46"},{"size":5225,"mtime":1644768237941,"results":"63","hashOfConfig":"46"},{"size":635,"mtime":1621346331599,"results":"64","hashOfConfig":"46"},{"size":2814,"mtime":1644768712210,"results":"65","hashOfConfig":"46"},{"size":2936,"mtime":1644768041866,"results":"66","hashOfConfig":"46"},{"size":1561,"mtime":1621352798810,"results":"67","hashOfConfig":"46"},{"size":100,"mtime":1615027569370,"results":"68","hashOfConfig":"46"},{"size":9735,"mtime":1644770320466,"results":"69","hashOfConfig":"46"},{"size":3939,"mtime":1644770058018,"results":"70","hashOfConfig":"46"},{"size":780,"mtime":1644734880606,"results":"71","hashOfConfig":"46"},{"size":2674,"mtime":1621941930318,"results":"72","hashOfConfig":"46"},{"size":980,"mtime":1614017706808,"results":"73","hashOfConfig":"46"},{"size":10419,"mtime":1644769675396,"results":"74","hashOfConfig":"46"},{"size":572,"mtime":1619177431668,"results":"75","hashOfConfig":"46"},{"size":3245,"mtime":1621447996408,"results":"76","hashOfConfig":"46"},{"size":85,"mtime":1619847723116,"results":"77","hashOfConfig":"46"},{"size":10238,"mtime":1644769923969,"results":"78","hashOfConfig":"46"},{"size":2788,"mtime":1621334576540,"results":"79","hashOfConfig":"46"},{"size":572,"mtime":1619177431668,"results":"80","hashOfConfig":"46"},{"size":1430,"mtime":1644768293582,"results":"81","hashOfConfig":"46"},{"size":3691,"mtime":1644769854638,"results":"82","hashOfConfig":"46"},{"size":1558,"mtime":1621357140146,"results":"83","hashOfConfig":"46"},{"size":2179,"mtime":1644771916712,"results":"84","hashOfConfig":"46"},{"size":2627,"mtime":1622131834122,"results":"85","hashOfConfig":"46"},{"size":1588,"mtime":1621571850228,"results":"86","hashOfConfig":"46"},{"size":2073,"mtime":1621683420507,"results":"87","hashOfConfig":"46"},{"size":2711,"mtime":1621686303439,"results":"88","hashOfConfig":"46"},{"size":2262,"mtime":1621935194229,"results":"89","hashOfConfig":"46"},{"size":2114,"mtime":1621703484510,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"idfrus",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xx4rqi",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"93"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"93"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"F:\\Projects\\Major Project\\major_project\\src\\index.js",[],["201","202"],"F:\\Projects\\Major Project\\major_project\\src\\App.js",[],"F:\\Projects\\Major Project\\major_project\\src\\reportWebVitals.js",[],"F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Layout\\Layout.js",[],"F:\\Projects\\Major Project\\major_project\\src\\containers\\hoc\\Auxiliary\\Auxiliary.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Toolbar\\Toolbar.js",["203","204","205","206"],"import React, { useState, useEffect } from 'react';\r\nimport Aux from '../../../containers/hoc/Auxiliary/Auxiliary';\r\nimport classes from './Toolbar.module.css';\r\nimport {AuthContext} from \"../../../App\";\r\nimport userTypes from './../../../utilities/enums/userTypes'\r\n\r\nfunction Toolbar(props){\r\n\r\n  const {state,dispatch} = React.useContext(AuthContext);\r\n\r\n  const [hamburger,setHamburger] = useState(true);\r\n  const [userType,setUserType] = useState(null);\r\n\r\n   const hamburgerHandler = (e) => {\r\n     console.log(\"hamburger click\",e)\r\n     setHamburger(!hamburger)\r\n   }\r\n\r\n   useEffect(() => {\r\n     dispatch({})\r\n     console.log(\"using effect\",state)\r\n   }, [hamburger])\r\n\r\n   useEffect(async () => {\r\n     console.log(\"usingeffectives\",state)\r\n     console.log(userType)\r\n     if(state.user && userType === null){\r\n         console.log(\"state,user\",JSON.parse(state.user).type)\r\n         setUserType(JSON.parse(state.user).type)\r\n     }\r\n   })\r\n\r\n        return(\r\n            <Aux>\r\n              {console.log(\"toolbar state\",state)}\r\n              {console.log(\"props\",props)}\r\n              {console.log(state.user)}\r\n              {state.user ? console.log(\"not null\",state.user.type) : null}\r\n              <div className={classes[\"header\"]}>\r\n                    <div className={classes[\"container\"]}>\r\n                        <input type=\"checkbox\" name=\"\" className={classes[\"check\"]} />\r\n                        \r\n                        <div className={classes[\"logo-container\"]}>\r\n                            {/* <img src={Logo} className={classes[\"logoImage\"]}></img> */}\r\n                            <h3 className={classes[\"logo\"]}>E-cofF</h3>\r\n                            <h1 className={classes[\"tagline\"]}>e-commerce for farmers</h1>\r\n                        </div>\r\n\r\n                        <div className={classes[\"nav-btn\"]}>\r\n                            <div className={classes[\"nav-links\"]}>\r\n                                <ul className={classes[\"ul\"]} onClick={hamburgerHandler}>\r\n                                    <li className={classes[\"nav-link\"]}>\r\n                                        <a href=\"/\" className={classes['a']}>Home</a>\r\n                                    </li>\r\n                                    {(state.user ? (userType === userTypes.FARMER  ? (<li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"#\">Farmer<i className=\"fas fa-caret-down\"></i></a>\r\n                                        <div className={classes[\"dropdown\"]}>\r\n                                            <ul className={classes[\"ul\"]}>\r\n                                                <li className={classes[\"dropdown-link\"]}>\r\n                                                    <a className={classes[\"a\"]} href=\"/farmer/addCrop\">ADD Crop</a>\r\n                                                </li>\r\n                                                <li className={classes[\"dropdown-link\"]}>\r\n                                                    <a className={classes[\"a\"]} href=\"/farmer/updateCrop\">Update Crop</a>\r\n                                                </li>\r\n                                                <li className={classes[\"dropdown-link\"]}>\r\n                                                    <a className={classes[\"a\"]} href=\"/farmer/deleteCrop\">Delete Crop</a>\r\n                                                </li>\r\n                                                <div className={classes[\"arrow\"]}></div>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>) : \"\") : \"\")}\r\n                                    <li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"/products\">Products</a>\r\n                                    </li>\r\n                                    <li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"/news\">News</a>\r\n                                    </li>\r\n                                    <li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"/about\">About Us</a>\r\n                                    </li>\r\n                                    <li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"/contact\">Contact Us</a>\r\n                                    </li>\r\n                                    {!(state.isAuthenticated) ? (<>\r\n                                      <li className={classes[\"nav-link\"]} >\r\n                                      <a className={classes[\"a\"]} href=\"/register\">Register</a>\r\n                                      </li>\r\n                                      <li className={classes[\"nav-link\"]} >\r\n                                          <a className={classes[\"a\"]} href=\"/login\">Login</a>\r\n                                      </li>\r\n                                   </> ) : (<>\r\n                                      <li className={classes[\"nav-link\"]} >\r\n                                        <a className={classes[\"a\"]} href=\"/profile\">Profile</a>\r\n                                      </li>\r\n                                      <li className={classes[\"nav-link\"]} >\r\n                                          <a className={classes[\"a\"]} href=\"/logout\">Logout</a>\r\n                                      </li>   \r\n                                   </> )}\r\n                                    \r\n                                </ul>\r\n                            </div>\r\n\r\n                     \r\n                        </div>\r\n\r\n                        <div className={classes[\"hamburger-menu-container\"]}>\r\n                            <div className={classes[\"hamburger-menu\"]} onClick={hamburgerHandler}>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {props.children}\r\n            </Aux>\r\n        )\r\n}\r\n\r\nexport default Toolbar;","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\Register.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\FormSignUp.js",["207"],"import React, {useState} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './register.module.css';\r\n\r\nconst SignUp = ({submitForm,userType}) => {\r\n       console.log(\"form\",userType)\r\n        const {handleChange,values,handleSubmit,errors,disabled} = useForm(submitForm,userType,validate);\r\n        return (\r\n            <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                    <h1 style={{textAlign:\"center\"}}>REGISTER</h1>\r\n                    <hr className={classes[\"hr\"]}/>\r\n                    <div>\r\n                        <label htmlFor=\"username\"  >\r\n                             <b style={{fontSize:'25px'}}>Username</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your username\"\r\n                            value={values.username}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.username && <p className={classes[\"warning\"]}>{errors.username}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\" >\r\n                             <b style={{fontSize:'25px'}}>Email</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your email\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.email && <p className={classes[\"warning\"]}>{errors.email}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"phoneNo\" >\r\n                             <b style={{fontSize:'25px'}}>Phone No</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"phoneNo\"\r\n                            type=\"number\"\r\n                            name=\"phoneNo\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your Phone Number\"\r\n                            value={values.phoneNo}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.phoneNo && <p className={classes[\"warning\"]}>{errors.phoneNo}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\" >\r\n                             <b style={{fontSize:'25px'}}>Password</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your password\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password && <p className={classes[\"warning\"]}>{errors.password}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"password2\" >\r\n                             <b style={{fontSize:'25px'}}>Confirm Password</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"password2\"\r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Confirm your password\"\r\n                            value={values.password2}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password2 && <p className={classes[\"warning\"]}>{errors.password2}</p>}\r\n                    </div>\r\n                    {disabled ? <div class=\"fa-3x\" style={{textAlign:\"center\"}}>  <i class=\"fas fa-spinner fa-spin\"></i></div> : <><button type=\"submit\" className={classes[\"registerbtn\"]}>\r\n                        Sign Up\r\n                    </button>\r\n                    <span type=\"submit\" >\r\n                        <p style={{textAlign:\"center\"}}>Already have an account? <Link to=\"/login\">LOGIN</Link></p> \r\n                    </span></>}\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default SignUp;","F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\Home.js",["208","209","210","211","212","213","214","215","216","217","218","219","220"],"import classes from './Home.module.css';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport UserCounter from './userCounter/userCounter'\r\nimport Corousal from './corousal/corousal'\r\n\r\nclass Home extends Component \r\n{\r\n\r\n    state = {\r\n        crops: [],\r\n        count: null\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch(`${process.env.REACT_APP_API_URL}/products/crops?pageNumber=1&pageSize=4`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            console.log(\"data\",data)\r\n            if(data.error){\r\n               return swal(data.error)\r\n            }\r\n            data =  data.products.slice(0,4)\r\n            this.setState({crops: data})\r\n        }).catch(e => {\r\n            console.log(\"error\",e)\r\n            swal(\"Unable to connect to the server\")\r\n        })\r\n\r\n    }\r\n\r\n    mouseOverHandler = () => {\r\n        const mrq = document.getElementById(\"mrq\")\r\n        mrq.stop()\r\n    }\r\n\r\n    mouseOutHandler = () => {\r\n        const mrq = document.getElementById(\"mrq\")\r\n        mrq.start()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <>\r\n                <Corousal />\r\n                <div className={classes[\"crop-scheme-container\"]}>\r\n                    <div>\r\n                        <h1 style={{textAlign:'center',marginTop:'10px'}}>Popular Products</h1>\r\n                    <main className={classes.CardLayout}>\r\n                        {\r\n                            this.state.crops.map((crop,index) => {\r\n                            console.log(crop);\r\n                            //   break;\r\n                            //  console.log(crop.images[0].buffer)\r\n                            return (<div><article key={index}>\r\n                                <Link to={`/crop/${crop._id}`}>\r\n                                    <div className={classes.ImageContainer}>\r\n                                        <img src={`${process.env.REACT_APP_API_URL}${crop.images[0]}`} alt=\"tshirt photo\" />\r\n                                    </div>\r\n                                </Link>\r\n                                <div className={classes.content}>\r\n                                    <h3>{crop.crop}</h3>\r\n                                    <h4>{crop.amount}<span>KG</span></h4>\r\n                                    <h4>MRP: Rs {crop.price}.00/-</h4>\r\n                                </div>\r\n                            </article></div>);\r\n                            })\r\n                        }\r\n                    </main>\r\n                    {this.state.crops.length === 0 ? <div class=\"fa-5x\" style={{textAlign:\"center\"}}>  <i class=\"fas fa-spinner fa-spin\"></i></div> : null}  \r\n                    </div>\r\n                    <div className={classes[\"mrq-container\"]}>\r\n                        <h2 style={{textAlign:'center'}}>Agricultural Schemes</h2>\r\n                        <hr />\r\n                        <marquee id={\"mrq\"} height={\"300px\"} width={\"100%\"} behavior={\"scroll\"} direction={\"up\"} scrollAmount={\"4\"} onMouseOver={this.mouseOverHandler} onMouseOut={this.mouseOutHandler}>\r\n                            <ul>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://www.pmkisan.gov.in/\"} target={\"_blank\"}>Pradhan Mantri Kisan Maandhan Yojana</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://pmkmy.gov.in/\"} target={\"_blank\"}>Pradhan Mantri Kisan Scheme</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://krishijagran.com/news/how-to-apply-for-kisan-credit-card-online-check-step-by-step-process/\"} target={\"_blank\"}>Kisan Credit Card (KCC) Scheme</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://krishijagran.com/agriculture-world/pashu-kisan-credit-card-yojana-eligibility-benefits-loan-amount-necessary-documents-methods-to-apply/\"} target={\"_blank\"}>Pashu Kisan Credit Card Scheme</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://krishijagran.com/agriculture-world/how-farmers-can-get-rs-50000-per-hectare-for-organic-farming-under-paramparagat-krishi-vikas-yojana/\"} target={\"_blank\"}>Paramparagat Krishi Vikas Yojana (PKVY)</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} target={\"_blank\"}>Pradhan Mantri Krishi Sinchai Yojana (PMKSY)</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://krishijagran.com/animal-husbandry/dairy-entrepreneurship-development-scheme-how-farmers-can-get-loans-up-to-rs-20-lakh-under-this-scheme/\"} target={\"_blank\"}>Dairy Entrepreneurship Development Scheme</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"\"} target={\"_blank\"}>Mission Organic Value Chain Development in North Eastern Region (MOVCDNER) - implemented by INM Division</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://soilhealth.dac.gov.in/\"} target={\"_blank\"}>National Mission for Sustainable Agriculture (NMSA)</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className={classes[\"scheme-container\"]}>\r\n                                    <p className={classes[\"scheme\"]}>\r\n                                        <a className={classes[\"link\"]} href={\"https://pmkmy.gov.in/\"} target={\"_blank\"}>Rainfed Area Development (RAD) - implemented by RFS Division</a>\r\n                                    </p>\r\n                                    <p className={classes[\"update\"]}>Last Update On: 12/03/21</p>\r\n                                </li>\r\n                            </ul>\r\n                        </marquee>\r\n                    </div>\r\n                </div>\r\n                <UserCounter />\r\n             </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\Login.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\FormSignIn.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\useForm.js",["221","222","223"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../App'\r\nimport swal from 'sweetalert';\r\n\r\nconst useForm = (callback,userType,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    const {dispatch} = React.useContext(AuthContext);\r\n\r\n    const [disabled,setDisabled] = useState(false)\r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          setDisabled(true)\r\n            fetch(`${process.env.REACT_APP_API_URL}/auth/login`,{\r\n                method: 'POST',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                  email : values.email,\r\n                  password : values.password,\r\n                  type: userType\r\n                })\r\n              }).then(res => {\r\n                console.log(\"res\",res);\r\n                if(res.ok){\r\n                  return res.json();\r\n                }else if(res.status === 400){\r\n                  throw  {error:{\r\n                        password: 'Invalid credentials'\r\n                  }}\r\n                }else{\r\n                  throw \"\";\r\n                }\r\n                \r\n              })\r\n              .then(data => {\r\n                console.log(\"data entry\",data);\r\n                    Cookies.set('token', data, { expires: 1 })\r\n                    dispatch({\r\n                        type: \"LOGIN\",\r\n                        payload: {\r\n                          isAuthenticated: true,\r\n                          user: {\r\n                            email: values.email,\r\n                            type: userType\r\n                          }\r\n                        }\r\n                      })\r\n                    callback();\r\n              }).catch(e => {\r\n                if(e.error){\r\n                  setError({password: e.error.password})\r\n                }else{\r\n                  swal(\"Unexpected Error\");\r\n                }\r\n                console.log(\"login error\",e);\r\n              }).finally(() => {\r\n                setDisabled(false)\r\n              })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors,disabled};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\Login\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\News\\news.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\products\\products.js",["224","225"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport classes from './product.module.css';\r\nimport ProductFilter from './ProductFilter/ProductFilter'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nclass CardLayout extends Component{\r\n\r\n   state = {\r\n     crops: [],\r\n     pageCount: 0,\r\n     pageSize: 10\r\n   }\r\n\r\n   componentDidMount(){\r\n    this.getProducts()\r\n   }\r\n\r\n    getProducts(){\r\n      fetch(`${process.env.REACT_APP_API_URL}/products/crops?pageNumber=1&pageSize=${this.state.pageSize}`,{\r\n        method: 'GET',\r\n        headers : {\r\n          'Content-Type' : 'Application/json'\r\n        }\r\n      }).then(res => {\r\n        return res.json()\r\n      })\r\n      .then(data => {\r\n         console.log(\"product data\",data);\r\n         this.setState({\r\n           crops: data.products,\r\n           pageCount: data.totalPages\r\n          })\r\n      })  \r\n      .catch(e => {\r\n        alert(e);\r\n      })\r\n    } \r\n\r\n   filterProducts = (filter) => {\r\n    this.setState({pageSize: filter.pageSize},() => {\r\n      this.getProducts()\r\n    })\r\n    console.log(\"call\")\r\n    // filter.crop = filter.crop.trim()\r\n    // filter.pincode = filter.pincode.trim()\r\n    //  fetch(`${process.env.REACT_APP_API_URL}/products/filter`,{\r\n    //    method: 'POST',\r\n    //    headers: {\r\n    //      'content-type' : 'application/json'\r\n    //    },\r\n    //    body: JSON.stringify({\r\n    //      filter\r\n    //    })\r\n    //  }).then(res => res.json())\r\n    //  .then(data => {\r\n    //    console.log(\"data\",data)\r\n    //    if(data.length)\r\n    //    this.setState({crops:data})\r\n    //    else\r\n    //    swal(\"No data found\")\r\n    //  })\r\n\r\n   }\r\n\r\n   handlePageClick = (pageInfo) => {\r\n     console.log(\"ok\",pageInfo)\r\n     this.setState({crops: []})\r\n     fetch(`${process.env.REACT_APP_API_URL}/products/crops?pageNumber=${pageInfo.selected+1}&pageSize=${this.state.pageSize}`,{\r\n      method: 'GET',\r\n      headers : {\r\n        'Content-Type' : 'Application/json'\r\n      }\r\n    }).then(res => {\r\n      return res.json()\r\n    })\r\n    .then(data => {\r\n       console.log(\"product data\",data);\r\n       this.setState({\r\n         crops: data.products,\r\n         pageCount: data.totalPages\r\n        })\r\n    })  \r\n    .catch(e => {\r\n      alert(e);\r\n    })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n          <div className={classes[\"container\"]}>\r\n            <ProductFilter filterProducts={this.filterProducts}/>\r\n            <main className={classes.CardLayout}>\r\n              {\r\n                 this.state.crops.map((crop,index) => {\r\n                   console.log(crop);\r\n                  //  console.log(crop.images[0].buffer)\r\n                   return (<article key={index}>\r\n                    <Link to={`/crop/${crop._id}`}>\r\n                        <div className={classes.ImageContainer}>\r\n                            <img src={`${process.env.REACT_APP_API_URL}${crop.images[0]}`} alt=\"tshirt photo\" />\r\n                        </div>\r\n                    </Link>\r\n                    <div className={classes.content}>\r\n                        <h3>{crop.crop}</h3>\r\n                        <h4>{crop.amount}<span>KG</span></h4>\r\n                        <h4>MRP: Rs {crop.price}.00/-</h4>\r\n                    </div>\r\n                  </article>);\r\n                 })\r\n              }\r\n            </main>\r\n            { \r\n              this.state.crops.length === 0 ? \r\n                <div class=\"fa-5x\" style={{textAlign:\"center\",minHeight:'70vh'}}>  \r\n                  <i class=\"fas fa-spinner fa-spin\"></i>\r\n                </div> \r\n                : null\r\n            }\r\n            <ReactPaginate\r\n              previousLabel={'<<'}\r\n              nextLabel={'>>'}\r\n              breakLabel={'...'}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={1}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={classes['pagination']}\r\n              pageClassName={classes['page-item']}\r\n              pageLinkClassName={classes['page-link']}\r\n              previousClassName={classes['page-item']}\r\n              previousLinkClassName={classes['page-link']}\r\n              nextClassName={classes['page-item']}\r\n              nextLinkClassName={classes['page-link']}\r\n              breakClassName={classes['page-item']}\r\n              breakLinkClassName={classes['page-link']}\r\n              activeClassName={classes['active']}\r\n            />  \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardLayout;","F:\\Projects\\Major Project\\major_project\\src\\utilities\\history\\history.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\Profile.js",["226","227"],"import React, {useState} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './profile.module.css';\r\nimport FarmerProducts from './farmerProducts/farmerProducts'\r\n\r\nconst Profile = ({submitForm}) => {\r\n        const {handleChange,values,handleSubmit,errors,product} = useForm(submitForm,validate);\r\n        return (\r\n        <>\r\n            <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                <h1 style={{textAlign:\"center\"}}>PROFILE</h1><br />\r\n                <div className={classes[\"profile\"]}>\r\n                    <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                        <div>\r\n                            <label htmlFor=\"username\"  >\r\n                                <b style={{fontSize:'25px'}}>Username</b>\r\n                            </label>\r\n                            <input\r\n                                id=\"username\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                className={classes[\"formInput\"]}\r\n                                placeholder=\"Enter your username\"\r\n                                value={values.username}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.username && <p className={classes[\"warning\"]}>{errors.username}</p>}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\" >\r\n                                <b style={{fontSize:'25px'}}>Email</b>\r\n                            </label>\r\n                            <input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                className={classes[\"formInput\"]}\r\n                                placeholder=\"Enter your email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                disabled\r\n                            />\r\n                            {errors.email && <p className={classes[\"warning\"]}>{errors.email}</p>}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"phoneNo\" >\r\n                                <b style={{fontSize:'25px'}}>Phone No</b>\r\n                            </label>\r\n                            <input\r\n                                id=\"phoneNo\"\r\n                                type=\"number\"\r\n                                name=\"phoneNo\"\r\n                                className={classes[\"formInput\"]}\r\n                                placeholder=\"Enter your Phone Number\"\r\n                                value={values.phoneNo}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.phoneNo && <p className={classes[\"warning\"]}>{errors.phoneNo}</p>}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"address\" >\r\n                                <b style={{fontSize:'25px'}}>Address</b>\r\n                            </label>\r\n                            <input\r\n                                id=\"address\"\r\n                                type=\"text\"\r\n                                name=\"address\"\r\n                                className={classes[\"formInput\"]}\r\n                                placeholder=\"Enter your Address\"\r\n                                value={values.address}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.address && <p className={classes[\"warning\"]}>{errors.address}</p>}\r\n                        </div>\r\n                        <div >\r\n                            <label htmlFor=\"pincode\" >\r\n                                <b style={{fontSize:'25px'}}>Pincode</b>\r\n                            </label>\r\n                            <input\r\n                                id=\"pincode\"\r\n                                type=\"text\"\r\n                                name=\"pincode\"\r\n                                className={classes[\"formInput\"]}\r\n                                placeholder=\"Enter your pincode\"\r\n                                value={values.pincode}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.pincode && <p className={classes[\"warning\"]}>{errors.pincode}</p>}\r\n                        </div>\r\n                        \r\n                        <div></div>\r\n                    </form>\r\n                    <button onClick={handleSubmit} type=\"submit\" className={classes[\"registerbtn\"]} style={{textAlign:\"center\",alignItems:'center',justifyContent:'center',marginLeft:'auto',marginRight:'auto'}}>\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <FarmerProducts product={product}/>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Profile;","F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\useForm\\useForm.js",["228","229","230","231","232"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../App'\r\nimport getUserData from './../../../utilities/userData/userData'\r\nimport swal from 'sweetalert'\r\n\r\nconst useForm = (callback,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phoneNo: '',\r\n        address: '',\r\n        pincode: ''\r\n    })\r\n    const [product,setProduct] = useState(null)\r\n    // const {state,dispatch} = React.useContext(AuthContext)\r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(values.email === ''){\r\n\r\n        fetch(`${process.env.REACT_APP_API_URL}/profile`,{\r\n          method: 'GET',\r\n          headers:{\r\n            'content-type' : 'application/json',\r\n            token: JSON.parse(Cookies.get('token')).token\r\n          }\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n\r\n          if(data.error){\r\n            swal(data.error)\r\n          }\r\n\r\n          console.log(\"profile Data\",data)\r\n\r\n          const {user} = data\r\n          const {products} = data\r\n          setProduct(products)\r\n          console.log(\"user\",user)\r\n          \r\n          setValues({\r\n            username: user.name,\r\n            email: user.email,\r\n            phoneNo: user.phoneNo,\r\n            address: user.address,\r\n            pincode: user.pincode\r\n          })\r\n\r\n        })\r\n      }\r\n    },[])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"err\")\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n      console.log(\"length\",Object.keys(errors).length)\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          const token = JSON.parse(Cookies.get('token')).token\r\n          fetch(`${process.env.REACT_APP_API_URL}/profile/update`,{\r\n            method: 'POST',\r\n            headers:{\r\n              'content-type':'application/json',\r\n              token\r\n            },\r\n            body:JSON.stringify({\r\n              name: values.username,\r\n              phoneNo: values.phoneNo,\r\n              address: values.address,\r\n              pincode: values.pincode\r\n            })\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n            if(data.error){\r\n              swal(data.error)\r\n            }else{\r\n              swal(\"Profile was uploaded successfully\")\r\n            }\r\n          })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors,product};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductDetails.js",["233"],"import React, { Component } from 'react';\r\nimport classes from './ProductDetails.module.css';\r\nimport CardContent from './ProductContent/ProductContent';\r\nimport swal from 'sweetalert';\r\n\r\nclass CardDetails extends Component{\r\n\r\n    state = {\r\n        x: 0,\r\n        crop: null,\r\n        farmer: null\r\n    }\r\n\r\n    goLeft = () => {\r\n       this.setState((preProps) => {\r\n        if(preProps.x === 0)\r\n        {\r\n            return {x:-100*(this.state.crop.images.length-1)}\r\n        }else{\r\n            return {x:preProps.x+100}\r\n        }\r\n       })\r\n    }\r\n\r\n    goRight = () => {\r\n        console.log(this.state.x);\r\n        this.setState((preProps) => {\r\n            if(preProps.x === -100*(this.state.crop.images.length-1))\r\n            {\r\n                return {x:0}\r\n            }else{\r\n                return {x:preProps.x-100}\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"params id\",this.props.match.params.id)\r\n        fetch(`${process.env.REACT_APP_API_URL}/products/id`,{\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type' : 'Application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id: this.props.match.params.id\r\n            })\r\n        }).then(res => res.json())      \r\n        .then(async (data) => {\r\n            console.log(\"data\",data)\r\n            this.setState({crop: data.crop,farmer: data.farmer})\r\n            }).catch(e => {\r\n            console.log(\"error\",e)\r\n            swal(e);\r\n        })\r\n    }\r\n\r\n   render() {\r\n       return (\r\n           <>\r\n                {this.state.crop !== null ? (<>\r\n                    <div className={classes.slider}>\r\n                    {\r\n                        this.state.crop.images.map((item,index) => {\r\n                            console.log(\"index\",index)\r\n                            return (\r\n                                <div key={index} className={classes.slide}\r\n                                     style={{transform:`translateX(${this.state.x}%)`}}>\r\n                                    <img src={`${process.env.REACT_APP_API_URL}${item}`} className={classes.imageStyles}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                <button className={classes.goLeft} onClick={this.goLeft}>\r\n                    <i class=\"fas fa-chevron-left\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                </button>\r\n                <button className={classes.goRight} onClick={this.goRight}>\r\n                    <i class=\"fas fa-chevron-right\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                </button>\r\n                </div>\r\n                <CardContent crop={this.state.crop} farmer={this.state.farmer}/></>) : <p style={{textAlign:'center',marginTop:'200px'}}>Waiting...</p>}\r\n            </>\r\n       );\r\n   }\r\n}\r\n\r\nexport default CardDetails;","F:\\Projects\\Major Project\\major_project\\src\\components\\products\\productsDetails\\ProductContent\\ProductContent.js",[],"F:\\Projects\\Major Project\\major_project\\src\\utilities\\userData\\userData.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\addCrop.js",["234","235","236"],"import React, {useEffect, useState} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './addCrop.module.css';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\n\r\nconst AddCrop = () => {\r\n\r\n        const submitForm = () => {\r\n            console.log(\"Submit Form\")\r\n        }\r\n\r\n        const [items,setItems] = useState([])\r\n        const [cropImage,setCropImage] = useState()\r\n\r\n        const {handleChange,values,handleSubmit,errors,disabled} = useForm(submitForm,validate);\r\n        \r\n        useEffect(() => {\r\n            fetch(`${process.env.REACT_APP_API_URL}/products/cropNames`,{\r\n                method: 'GET',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                }\r\n            }).then(res => {\r\n                return res.json()\r\n            }).then(data => {\r\n                console.log(\"product data\",data);\r\n                setItems(data)\r\n            }).catch(e => {\r\n                alert(e);\r\n            })\r\n        },[])\r\n        \r\n        return (\r\n            <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                    <h1 style={{textAlign:\"center\"}}>ADD CROP</h1>\r\n                    <hr className={classes[\"hr\"]}/>\r\n\r\n                    { \r\n                        cropImage && values.cropName &&\r\n                        <div className={classes[\"productImage\"]}>\r\n                            <img src={cropImage} />\r\n                        </div> \r\n                    }\r\n\r\n                    <div>\r\n                        <label htmlFor=\"cropName\"  >\r\n                             <b style={{fontSize:'25px'}}>Crop Name</b>\r\n                        </label>\r\n                        <br/>\r\n                        <Autocomplete\r\n                            className={classes[\"autocompleteFormInput\"]}\r\n                            value={values.cropName}\r\n                            onChange={(event, newValue) => {\r\n                                console.log(\"newValue\",newValue)\r\n                                if(newValue?.crop){\r\n                                    const crop = items.find((item) => {\r\n                                        return item.crop === newValue.crop\r\n                                    })\r\n                                    setCropImage(`${process.env.REACT_APP_API_URL}${crop.image}`)    \r\n                                }else{\r\n                                    setCropImage(\"\")\r\n                                }\r\n                                // if(newValue){\r\n                                handleChange(event,newValue?.crop,\"cropName\")\r\n                                // }\r\n                            }}\r\n                            name=\"cropName\"\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={items}\r\n                            getOptionLabel={(option) => {\r\n                                // Value selected with enter, right from the input\r\n                                if (typeof option === 'string') {\r\n                                    return option;\r\n                                }\r\n                                // Add \"xxx\" option created dynamically\r\n                                if (option.inputValue) {\r\n                                    return option.inputValue;\r\n                                }\r\n                                // Regular option\r\n                                return option.crop;\r\n                            }}\r\n                            renderOption={(props, option) => <li {...props}>{option.crop}</li>}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                            <TextField {...params} label=\"Please Enter Crop Name\" variant=\"standard\"/>\r\n                            )}\r\n                        />\r\n                        {errors.cropName && <p className={classes[\"warning\"]}>{errors.cropName}</p>}\r\n                    </div>\r\n                    {/* <div>\r\n                        <label htmlFor=\"cropName\"  >\r\n                             <b style={{fontSize:'25px'}}>Crop Name</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"cropName\"\r\n                            type=\"text\"\r\n                            name=\"cropName\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter the Crop Name\"\r\n                            value={values.cropName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.cropName && <p className={classes[\"warning\"]}>{errors.cropName}</p>}\r\n                    </div> */}\r\n                    <div>\r\n                        <label htmlFor=\"weight\" >\r\n                             <b style={{fontSize:'25px'}}>Crop Weight (Kgs)</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"weight\"\r\n                            type=\"number\"\r\n                            name=\"weight\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter the weight of the crop\"\r\n                            value={values.weight}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.weight && <p className={classes[\"warning\"]}>{errors.weight}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"price\" >\r\n                             <b style={{fontSize:'25px'}}>Price</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"price\"\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter your price\"\r\n                            value={values.price}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.price && <p className={classes[\"warning\"]}>{errors.price}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"description\" >\r\n                             <b style={{fontSize:'25px'}}>Product Description</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"description\"\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Enter the Product Description\"\r\n                            value={values.description}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.description && <p className={classes[\"warning\"]}>{errors.description}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"address\" >\r\n                             <b style={{fontSize:'25px'}}>Address</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"address\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Address\"\r\n                            value={values.address}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.address && <p className={classes[\"warning\"]}>{errors.address}</p>}\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"pincode\" >\r\n                             <b style={{fontSize:'25px'}}>Pincode</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"pincode\"\r\n                            type=\"number\"\r\n                            name=\"pincode\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Pincode\"\r\n                            value={values.pincode}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.pincode && <p className={classes[\"warning\"]}>{errors.pincode}</p>}\r\n                    </div>\r\n                    {/* <div >\r\n                        <label htmlFor=\"images\" >\r\n                             <b style={{fontSize:'25px'}}>Images</b>\r\n                        </label>\r\n                        <input\r\n                            id=\"images\"\r\n                            type=\"file\"\r\n                            name=\"images\"\r\n                            accept=\".png, .jpg\"\r\n                            className={classes[\"formInput\"]}\r\n                            placeholder=\"Images\"\r\n                            onChange={handleChange}\r\n                            multiple\r\n                        />\r\n                        {errors.images && <p className={classes[\"warning\"]}>{errors.images}</p>}\r\n                    </div> */}\r\n\r\n                    <button type=\"submit\" className={classes[\"registerbtn\"]} disabled={disabled}>\r\n                        Submit\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default AddCrop;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\useForm\\useForm.js",["237","238","239"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../../App';\r\nimport swal from 'sweetalert'\r\nimport axios from 'axios'\r\n\r\nconst useForm = (callback,validate,EnableButton,DisableButton) => {\r\n    const [values,setValues] = useState({\r\n        cropName: '',\r\n        weight: '',\r\n        price: '',\r\n        description: '',\r\n        address: '',\r\n        pincode: ''\r\n    })\r\n\r\n    const [disabled,setDisabled] = useState(false)\r\n\r\n    const {dispatch} = React.useContext(AuthContext)\r\n    \r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = (e,data,propertyName) => {\r\n      const {name} = e.target\r\n        if(data || propertyName){\r\n          setValues({\r\n            ...values,\r\n            [propertyName] : data ? data : \"\"\r\n          })\r\n        }else{\r\n          const {value} = e.target;\r\n          setValues({\r\n            ...values,\r\n            [name] : value\r\n          })\r\n        }\r\n        // console.log(value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n\r\n        console.log(values);\r\n\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      fetch(`${process.env.REACT_APP_API_URL}/profile`,{\r\n        method: 'GET',\r\n        headers:{\r\n          'content-type' : 'application/json',\r\n          token: JSON.parse(Cookies.get('token')).token\r\n        }\r\n      }).then(res => res.json())\r\n      .then(data => {\r\n\r\n        if(data.error){\r\n          swal(data.error)\r\n        }\r\n\r\n        console.log(\"profile Data\",data)\r\n\r\n        const {user} = data\r\n        console.log(\"user\",user)\r\n        \r\n        setValues({\r\n          address: user.address,\r\n          pincode: user.pincode\r\n        })\r\n\r\n      })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n\r\n          setDisabled(true)     \r\n\r\n          console.log('env',process.env)\r\n\r\n          let formData = new FormData();\r\n\r\n          for(let prop in values){\r\n              console.log(\"prop\",prop)\r\n              // if(prop === \"images\"){\r\n              //   for(let imageProp in values[prop])\r\n              //   {\r\n              //     if(imageProp !== \"length\")\r\n              //     formData.append(prop,values[prop][imageProp])\r\n              //   }\r\n              // }else{\r\n                formData.append(prop,values[prop])\r\n              // }\r\n          }\r\n\r\n          for (var pair of formData.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]); \r\n          }\r\n          console.log(\"Cookies\",Cookies.get('token'))\r\n          const token = JSON.parse(Cookies.get('token'))\r\n          fetch(`${process.env.REACT_APP_API_URL}/products/farmer/addCrop`,{\r\n            method: 'post',\r\n            body: formData,\r\n            headers:{\r\n              \"token\":token.token\r\n            }\r\n          }).then(ress => {\r\n            console.log(\"ress\",ress)\r\n            if(ress.status === 401)\r\n            {\r\n              swal(\"Please Login\")\r\n            }\r\n            return ress.json()\r\n          })\r\n          .then((response) => {\r\n                if(response.error){\r\n                  return swal(response.error)\r\n                }\r\n                swal(`Your product id is ${response.id}`)\r\n                setValues({\r\n                  ...values,\r\n                  cropName: '',\r\n                  weight: '',\r\n                  price: '',\r\n                  description: ''\r\n                })\r\n                setIsSubmitting(false)\r\n                console.log(response)\r\n          }).catch((error) => {\r\n            console.log(\"error\",error)\r\n          }).finally(() => {\r\n            setDisabled(false)\r\n          });\r\n\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors,disabled};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\addCrop\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\useForm.js",["240"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../App';\r\nimport swal from 'sweetalert'\r\n\r\nconst useForm = (callback,userType,validate) => {\r\n  console.log(\"useForm\",userType)\r\n    const [values,setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phoneNo: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const {dispatch} = React.useContext(AuthContext)\r\n    \r\n    const [disabled,setDisabled] = useState(false)\r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n      console.log(\"userType\",userType)\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          setDisabled(true)\r\n          console.log('env',process.env)\r\n            fetch(`${process.env.REACT_APP_API_URL}/auth/register`,{\r\n                method: 'POST',\r\n                headers : {\r\n                  'Content-Type' : 'Application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                  name : values.username,\r\n                  email : values.email,\r\n                  phoneNo : values.phoneNo,\r\n                  password : values.password,\r\n                  type: userType\r\n                })\r\n              }).then(async (res) => {\r\n                  return res.json();\r\n              })\r\n              .then(data => {\r\n                  console.log(\"data\",data);\r\n                  if(data.error){\r\n                    return swal(data.error)\r\n                  }\r\n                  Cookies.set('token', data, { expires: 1 })\r\n                  dispatch({\r\n                    type: \"LOGIN\",\r\n                    payload: {\r\n                      isAuthenticated: true,\r\n                      user: {\r\n                        name: values.username,\r\n                        email: values.email,\r\n                        phoneNo: values.phoneNo,\r\n                        type: userType\r\n                      }\r\n                    }\r\n                  })\r\n                  callback();\r\n              }).catch(e => {\r\n                swal(e)\r\n              }).finally(() => {\r\n                setDisabled(false)\r\n              })\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,errors,disabled};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\Register\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\updateCrop.js",["241","242","243","244","245"],"import React, {useState,useEffect} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './updateCrop.module.css';\r\nimport Cookies from 'js-cookie'\r\nimport swal from 'sweetalert';\r\n\r\nconst UpdateCrop = ({match:{params}}) => {\r\n\r\n        const [cropId,setCropId] = useState(\"\")\r\n        const [paramCropId,setParamCropId] = useState(\"\")\r\n\r\n        useEffect(async() => {\r\n            console.log(\"Effect using\",params)\r\n            if(params.id && !cropId){\r\n                console.log(\"cropId\")\r\n                setCropId(params.id)\r\n                setParamCropId(params.id)\r\n                console.log(\"cr\",cropId)\r\n            }\r\n        });\r\n\r\n        useEffect(() => {\r\n            if(cropId !== \"\"){\r\n                searchHandler()\r\n            }\r\n        },[paramCropId])\r\n\r\n        const submitForm = () => {\r\n            console.log(\"Submit Form\")\r\n        }\r\n        const [search,setSearch] = useState(true);\r\n\r\n        const setTheSetSearch = () => {\r\n            setSearch(true)\r\n            setCropId(\"\")\r\n        }\r\n\r\n        const {handleChange,values,handleSubmit,getFormData,errors} = useForm(submitForm,validate,setTheSetSearch);\r\n\r\n        const getInputValue = (e) => {\r\n            //   console.log(\"e\",e.target.value)\r\n              setCropId(e.target.value)\r\n        }\r\n\r\n        const searchHandler = () => {\r\n            setSearch(true) \r\n            console.log(\"searchHolder\",cropId)\r\n            try{\r\n            fetch(`${process.env.REACT_APP_API_URL}/products/getCrop/id`,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'token': JSON.parse(Cookies.get('token')).token\r\n                },\r\n                body: JSON.stringify({\r\n                    id: cropId\r\n                })\r\n            }).then(res => {\r\n                console.log(\"res\",res)\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                console.log(\"data\",data);\r\n                if(data.error){\r\n                    return swal(data.error)\r\n                }\r\n                getFormData(data,cropId)\r\n                setSearch(false)\r\n                // setCropId(\"\")\r\n            })\r\n\r\n            }catch(e){\r\n                if(!Cookies.get('token')){\r\n                    swal(\"Please Login\")\r\n                    localStorage.clear()\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        return (\r\n            <div className={classes[\"container\"]}>\r\n                <div className={classes[\"search-container\"]} >\r\n                    <input className={classes[\"search-input\"]} onChange={getInputValue} value={cropId}/>\r\n                    <button className={classes[\"search-btn\"]} onClick={searchHandler}>Search</button>\r\n                </div>\r\n                {\r\n                    !search && <>\r\n                    <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                        <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                            <h1 style={{textAlign:\"center\"}}>Update Crop</h1>\r\n                            <hr className={classes[\"hr\"]}/>\r\n                            <div>\r\n                                <label htmlFor=\"cropName\"  > \r\n                                     <b style={{fontSize:'25px'}}>Crop Name</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"cropName\"\r\n                                    type=\"text\"\r\n                                    name=\"cropName\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the Crop Name\"\r\n                                    value={values.cropName}\r\n                                    readOnly\r\n                                />\r\n                                {errors.cropName && <p className={classes[\"warning\"]}>{errors.cropName}</p>}\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"weight\" >\r\n                                     <b style={{fontSize:'25px'}}>Crop Weight (Kgs)</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"weight\"\r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the weight of the crop\"\r\n                                    value={values.weight}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {errors.weight && <p className={classes[\"warning\"]}>{errors.weight}</p>}\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"price\" >\r\n                                     <b style={{fontSize:'25px'}}>Price</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"price\"\r\n                                    type=\"number\"\r\n                                    name=\"price\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter your price\"\r\n                                    value={values.price}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {errors.price && <p className={classes[\"warning\"]}>{errors.price}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"description\" >\r\n                                     <b style={{fontSize:'25px'}}>Product Description</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"description\"\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the Product Description\"\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {errors.description && <p className={classes[\"warning\"]}>{errors.description}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"address\" >\r\n                                     <b style={{fontSize:'25px'}}>Address</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"address\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Address\"\r\n                                    value={values.address}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {errors.address && <p className={classes[\"warning\"]}>{errors.address}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"pincode\" >\r\n                                    <b style={{fontSize:'25px'}}>Pincode</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"pincode\"\r\n                                    type=\"number\"\r\n                                    name=\"pincode\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Pincode\"\r\n                                    value={values.pincode}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {errors.pincode && <p className={classes[\"warning\"]}>{errors.pincode}</p>}\r\n                            </div>\r\n\r\n                            <div >\r\n                                <label htmlFor=\"imageView\" >\r\n                                     <b style={{fontSize:'25px'}}>Images</b>\r\n                                </label>\r\n                                <div className={classes.imageContainer}>\r\n                                    {console.log(\"values\",values)}\r\n                                    {\r\n                                    values.images && values.images.map((image,index) => {\r\n                                        return <img className={classes.images} key={index} src={`${process.env.REACT_APP_API_URL}${image}`} />\r\n                                    })\r\n                                    }\r\n                                </div>  \r\n                            </div>\r\n        \r\n                            {/* <div >\r\n                                <label htmlFor=\"images\" >\r\n                                     <b style={{fontSize:'25px'}}>Images</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"images\"\r\n                                    type=\"file\"\r\n                                    name=\"images\"\r\n                                    accept=\".png, .jpg\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Images\"\r\n                                    onChange={handleChange}\r\n                                    multiple\r\n                                />\r\n                                {errors.images && <p className={classes[\"warning\"]}>{errors.images}</p>}\r\n                            </div> */}\r\n        \r\n                            <button type=\"submit\" className={classes[\"registerbtn\"]}>\r\n                                Update\r\n                            </button>\r\n        \r\n                        </form>\r\n                    </div></>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default UpdateCrop;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\updateCrop\\useForm\\useForm.js",["246","247","248"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../../App';\r\nimport swal from 'sweetalert'\r\nimport axios from 'axios'\r\n\r\nconst useForm = (callback,validate,setSearch) => {\r\n    const [values,setValues] = useState({\r\n        cropName: '',\r\n        weight: '',\r\n        price: '',\r\n        description: '',\r\n        address: '',\r\n        pincode: '',\r\n        images: null\r\n    })\r\n\r\n    let [cropId,setCropId] = useState(\"\")\r\n\r\n    const {dispatch} = React.useContext(AuthContext)\r\n    \r\n    const [errors,setError] = useState({});\r\n    const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n      const {name} = e.target\r\n        if(name === \"images\")\r\n        {\r\n            console.log(e);\r\n            console.log(e.target.files)\r\n            console.log(e.target)\r\n            const value = e.target.files\r\n            setValues({\r\n              ...values,\r\n              [name] : value\r\n            })\r\n        }else{\r\n          const {value} = e.target;\r\n          setValues({\r\n            ...values,\r\n            [name] : value\r\n          })\r\n        }\r\n        // console.log(value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n\r\n        console.log(values);\r\n\r\n        e.preventDefault();\r\n\r\n        setError(validate(values))\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    const getFormData = (data,id,search) => {\r\n      setValues({\r\n        images: data.images,\r\n        cropName: data.crop,\r\n        weight: data.amount,\r\n        price: data.price,\r\n        description: data.description,\r\n        address: data.address,\r\n        pincode: data.pincode\r\n      })\r\n      setCropId(id)\r\n      console.log(\"getFormId\",cropId)   \r\n      setSearch = search\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n          console.log('env',cropId)\r\n\r\n          fetch(`${process.env.REACT_APP_API_URL}/products/farmer/updateCrop`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'token': JSON.parse(Cookies.get('token')).token\r\n            },\r\n            body:JSON.stringify({\r\n                id: cropId,\r\n                crop: values.cropName,\r\n                address: values.address,\r\n                price: values.price,\r\n                amount: values.weight,\r\n                description: values.description,\r\n                pincode: values.pincode\r\n            })\r\n          }).then(res => {\r\n                console.log(\"response\",res)\r\n                return res.json()\r\n          })\r\n          .then(data => {\r\n              console.log(\"data\",data);\r\n              if(data.error){\r\n                return swal(data.error)\r\n              }\r\n              swal(\"Data was uploaded successfully\")\r\n\r\n              setValues({\r\n                  cropName: '',\r\n                  weight: '',\r\n                  price: '',\r\n                  description: '',\r\n                  address: '',\r\n                  images: null\r\n              })\r\n              setSearch()\r\n\r\n          })\r\n\r\n        }\r\n    },[errors])\r\n\r\n    return {handleChange,values,handleSubmit,getFormData,errors};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\utilities\\enums\\userTypes.js",["249"],"export default {\r\n    SELECT: \"SELECT\",\r\n    BUYER: 'BUYER',\r\n    FARMER: 'FARMER'\r\n}","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\deleteCrop.js",["250","251","252","253","254"],"import React, {useState,useEffect} from 'react';\r\nimport useForm from './useForm/useForm'\r\nimport validate from './useForm/validateInfo'\r\nimport {Link} from 'react-router-dom';\r\nimport classes from './deleteCrop.module.css';\r\nimport Cookies from 'js-cookie'\r\nimport swal from 'sweetalert'\r\n\r\nconst DeleteCrop = ({match:{params}}) => {\r\n    const [cropId,setCropId] = useState(\"\")\r\n    const [paramCropId,setParamCropId] = useState(\"\")\r\n\r\n    useEffect(async() => {\r\n        console.log(\"Effect using\",params)\r\n        if(params.id && !cropId){\r\n            console.log(\"cropId\")\r\n            setCropId(params.id)\r\n            setParamCropId(params.id)\r\n            console.log(\"cr\",cropId)\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(cropId !== \"\"){\r\n            searchHandler()\r\n        }\r\n    },[paramCropId])\r\n\r\n    const submitForm = () => {\r\n        console.log(\"Submit Form\")\r\n    }\r\n    const [search,setSearch] = useState(true);\r\n\r\n    const setTheSetSearch = () => {\r\n        setSearch(true)\r\n    }\r\n\r\n    const {handleChange,values,handleSubmit,getFormData,errors} = useForm(submitForm,validate,setTheSetSearch);\r\n\r\n    const getInputValue = (e) => {\r\n        //   console.log(\"e\",e.target.value)\r\n          setCropId(e.target.value)\r\n    }\r\n\r\n    const searchHandler = () => {\r\n        setSearch(true) \r\n        console.log(\"searchHolder\",cropId)\r\n        fetch(`${process.env.REACT_APP_API_URL}/products/getCrop/id`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'token': JSON.parse(Cookies.get('token')).token\r\n            },\r\n            body: JSON.stringify({\r\n                id: cropId\r\n            })\r\n        }).then(res => {\r\n            console.log(\"res\",res)\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            console.log(\"data\",data);\r\n            if(data.error){\r\n                return swal(data.error)\r\n            }\r\n            getFormData(data,cropId)\r\n            setSearch(false)\r\n            setCropId(\"\")\r\n        })\r\n        \r\n    }\r\n\r\n        return ( <div className={classes[\"container\"]}>\r\n                <div className={classes[\"search-container\"]} >\r\n                    <input className={classes[\"search-input\"]} onChange={getInputValue} value={cropId}/>\r\n                    <button className={classes[\"search-btn\"]} onClick={searchHandler}>Search</button>\r\n                </div>\r\n                {\r\n                    !search && <>\r\n                    <div className={`${classes[\"register-container\"]} ${classes.check}`} >\r\n                        <form onSubmit={handleSubmit} className={classes[\"form\"]}>\r\n                            <h1 style={{textAlign:\"center\"}}>Delete Crop</h1>\r\n                            <hr className={classes[\"hr\"]}/>\r\n                            <div>\r\n                                <label htmlFor=\"cropName\"  > \r\n                                     <b style={{fontSize:'25px'}}>Crop Name</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"cropName\"\r\n                                    type=\"text\"\r\n                                    name=\"cropName\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the Crop Name\"\r\n                                    value={values.cropName}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.cropName && <p className={classes[\"warning\"]}>{errors.cropName}</p>}\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"weight\" >\r\n                                     <b style={{fontSize:'25px'}}>Crop Weight (Kgs)</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"weight\"\r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the weight of the crop\"\r\n                                    value={values.weight}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.weight && <p className={classes[\"warning\"]}>{errors.weight}</p>}\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"price\" >\r\n                                     <b style={{fontSize:'25px'}}>Price</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"price\"\r\n                                    type=\"number\"\r\n                                    name=\"price\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter your price\"\r\n                                    value={values.price}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.price && <p className={classes[\"warning\"]}>{errors.price}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"description\" >\r\n                                     <b style={{fontSize:'25px'}}>Product Description</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"description\"\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Enter the Product Description\"\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.description && <p className={classes[\"warning\"]}>{errors.description}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"address\" >\r\n                                     <b style={{fontSize:'25px'}}>Address</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"address\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Address\"\r\n                                    value={values.address}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.address && <p className={classes[\"warning\"]}>{errors.address}</p>}\r\n                            </div>\r\n                            <div >\r\n                                <label htmlFor=\"pincode\" >\r\n                                    <b style={{fontSize:'25px'}}>Pincode</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"pincode\"\r\n                                    type=\"number\"\r\n                                    name=\"pincode\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Pincode\"\r\n                                    value={values.pincode}\r\n                                    onChange={handleChange}\r\n                                    readOnly\r\n                                />\r\n                                {errors.pincode && <p className={classes[\"warning\"]}>{errors.pincode}</p>}\r\n                            </div>\r\n\r\n                            <div >\r\n                                <label htmlFor=\"imageView\" >\r\n                                     <b style={{fontSize:'25px'}}>Images</b>\r\n                                </label>\r\n                                <div className={classes.imageContainer}>\r\n                                    {console.log(\"values\",values)}\r\n                                    {\r\n                                    values.images && values.images.map((image,index) => {\r\n                                        return <img className={classes.images} key={index} src={`${process.env.REACT_APP_API_URL}${image}`} />\r\n                                    })\r\n                                    }\r\n                                </div>  \r\n                            </div>\r\n        \r\n                            {/* <div >\r\n                                <label htmlFor=\"images\" >\r\n                                     <b style={{fontSize:'25px'}}>Images</b>\r\n                                </label>\r\n                                <input\r\n                                    id=\"images\"\r\n                                    type=\"file\"\r\n                                    name=\"images\"\r\n                                    accept=\".png, .jpg\"\r\n                                    className={classes[\"formInput\"]}\r\n                                    placeholder=\"Images\"\r\n                                    onChange={handleChange}\r\n                                    multiple\r\n                                />\r\n                                {errors.images && <p className={classes[\"warning\"]}>{errors.images}</p>}\r\n                            </div> */}\r\n        \r\n                            <button type=\"submit\" className={classes[\"registerbtn\"]}>\r\n                                Delete\r\n                            </button>\r\n        \r\n                        </form>\r\n                    </div></>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default DeleteCrop;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\useForm\\useForm.js",["255","256","257"],"import React,{useState,useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport {AuthContext} from './../../../../App';\r\nimport swal from 'sweetalert'\r\nimport axios from 'axios'\r\n\r\nconst useForm = (callback,validate,setSearch) => {\r\n  const [values,setValues] = useState({\r\n      cropName: '',\r\n      weight: '',\r\n      price: '',\r\n      description: '',\r\n      address: '',\r\n      pincode: '',\r\n      images: null\r\n  })\r\n\r\n  let [cropId,setCropId] = useState(\"\")\r\n\r\n  const {dispatch} = React.useContext(AuthContext)\r\n  \r\n  const [errors,setError] = useState({});\r\n  const [isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const {name} = e.target\r\n      if(name === \"images\")\r\n      {\r\n          console.log(e);\r\n          console.log(e.target.files)\r\n          console.log(e.target)\r\n          const value = e.target.files\r\n          setValues({\r\n            ...values,\r\n            [name] : value\r\n          })\r\n      }else{\r\n        const {value} = e.target;\r\n        setValues({\r\n          ...values,\r\n          [name] : value\r\n        })\r\n      }\r\n      // console.log(value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n      console.log(values);\r\n\r\n      e.preventDefault();\r\n\r\n      setError(validate(values))\r\n      setIsSubmitting(true);\r\n  }\r\n\r\n  const getFormData = (data,id,search) => {\r\n    setValues({\r\n      images: data.images,\r\n      cropName: data.crop,\r\n      weight: data.amount,\r\n      price: data.price,\r\n      description: data.description,\r\n      address: data.address,\r\n      pincode: data.pincode\r\n    })\r\n    setCropId(id)\r\n    console.log(\"getFormId\",cropId)   \r\n  }\r\n\r\n  useEffect(() => {\r\n      if(Object.keys(errors).length === 0 && isSubmitting){\r\n        console.log('env',cropId)\r\n\r\n        fetch(`${process.env.REACT_APP_API_URL}/products/farmer/deleteCrop`,{\r\n          method: 'POST',\r\n          headers: {\r\n              'content-type': 'application/json',\r\n              'token': JSON.parse(Cookies.get('token')).token\r\n          },\r\n          body:JSON.stringify({\r\n              id: cropId\r\n          })\r\n        }).then(res => {\r\n              console.log(\"response\",res)\r\n              return res.json()\r\n        })\r\n        .then(data => {\r\n            console.log(\"data\",data);\r\n            if(data.error){\r\n              return swal(data.error)\r\n            }\r\n            swal(\"Data was Deleted successfully\")\r\n\r\n            setValues({\r\n                cropName: '',\r\n                weight: '',\r\n                price: '',\r\n                description: '',\r\n                address: '',\r\n                images: null\r\n            })\r\n            setSearch()\r\n\r\n        })\r\n\r\n      }\r\n  },[errors])\r\n\r\n  return {handleChange,values,handleSubmit,getFormData,errors};\r\n}\r\n\r\nexport default useForm;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\deleteCrop\\useForm\\validateInfo.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Profile\\farmerProducts\\farmerProducts.js",["258"],"import React, { Component } from 'react';\r\nimport classes from './farmerProducts.module.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass FarmerProducts extends Component \r\n{\r\n\r\n    render() {\r\n        return (\r\n             <>\r\n            <div className={classes[\"container\"]}>\r\n                <main className={classes.CardLayout}>\r\n                {this.props.product && this.props.product.map((crop,index) => {\r\n                    console.log(\"map\")\r\n                    return (<article key={index}>\r\n                        <Link to={`/farmer/crop/${crop._id}`}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img src={`${process.env.REACT_APP_API_URL}${crop.images[0]}`} alt=\"tshirt photo\" />\r\n                            </div>\r\n                        </Link>\r\n                        <div className={classes.content}>\r\n                            <h3>{crop.crop}</h3>\r\n                            <h4>{crop.amount}<span>KG</span></h4>\r\n                            <h4>MRP: Rs {crop.price}.00/-</h4>\r\n                        </div>\r\n                    </article>)\r\n                })\r\n                    \r\n                }\r\n                {/* {this.state.crops.length === 0 ? <p style={{marginTop:'100px'}}>Waiting ...</p> : null}   */}\r\n                </main>\r\n            </div>\r\n             </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FarmerProducts;","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\showCrop\\showCrop.js",["259"],"import React, {Component} from 'react';\r\nimport classes from './showCrop.module.css';\r\nimport CropContent from './cropContent/cropContent';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom'    \r\n\r\nclass ShowCrop extends Component{\r\n\r\n    state = {\r\n        x: 0,\r\n        crop: null,\r\n        farmer: null\r\n    }\r\n\r\n    goLeft = () => {\r\n       this.setState((preProps) => {\r\n        if(preProps.x === 0)\r\n        {\r\n            return {x:-100*(this.state.crop.images.length-1)}\r\n        }else{\r\n            return {x:preProps.x+100}\r\n        }\r\n       })\r\n    }\r\n\r\n    goRight = () => {\r\n        console.log(this.state.x);\r\n        this.setState((preProps) => {\r\n            if(preProps.x === -100*(this.state.crop.images.length-1))\r\n            {\r\n                return {x:0}\r\n            }else{\r\n                return {x:preProps.x-100}\r\n            }\r\n        })\r\n    }\r\n\r\n    openUpdatePage = () => {\r\n        this.props.history.push(`/farmer/updateCrop/${this.state.crop._id}`)\r\n    }\r\n\r\n    openDeletePage = () => {\r\n        this.props.history.push(`/farmer/deleteCrop/${this.state.crop._id}`)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"params id\",this.props.match.params.id)\r\n        fetch(`${process.env.REACT_APP_API_URL}/products/id`,{\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type' : 'Application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id: this.props.match.params.id\r\n            })\r\n        }).then(res => res.json())      \r\n        .then(async (data) => {\r\n            console.log(\"data\",data)\r\n            this.setState({crop: data.crop,farmer: data.farmer})\r\n            }).catch(e => {\r\n            console.log(\"error\",e)\r\n            swal(e);\r\n        })\r\n    }\r\n\r\n   render() {\r\n       return (\r\n           <>\r\n                {this.state.crop !== null ? (<>\r\n                    <div className={classes.slider}>\r\n                    {\r\n                        this.state.crop.images.map((item,index) => {\r\n                            console.log(\"index\",index)\r\n                            return (\r\n                                <div key={index} className={classes.slide}\r\n                                     style={{transform:`translateX(${this.state.x}%)`}}>\r\n                                    <img src={`${process.env.REACT_APP_API_URL}${item}`} className={classes.imageStyles}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                <button className={classes.goLeft} onClick={this.goLeft}>\r\n                    <i class=\"fas fa-chevron-left\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                </button>\r\n                <button className={classes.goRight} onClick={this.goRight}>\r\n                    <i class=\"fas fa-chevron-right\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                </button>\r\n                </div>\r\n                <CropContent crop={this.state.crop} farmer={this.state.farmer}/>\r\n                <div className={classes[\"btn-container\"]}>\r\n                    <div className={classes.btnDiv}>\r\n                       <button className={classes.btn} onClick={this.openUpdatePage}>Update</button>\r\n                    </div>\r\n                    <div className={classes.btnDiv}>\r\n                        <button className={classes.btn} onClick={this.openDeletePage}>Delete</button>    \r\n                    </div>\r\n                 </div>    \r\n            </>) : <p style={{textAlign:'center',marginTop:'200px'}}>Waiting...</p>}\r\n\r\n            </>\r\n       );\r\n   }\r\n}\r\n\r\nexport default withRouter(ShowCrop);","F:\\Projects\\Major Project\\major_project\\src\\components\\farmers\\showCrop\\cropContent\\cropContent.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\products\\ProductFilter\\ProductFilter.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\userCounter\\userCounter.js",["260","261","262"],"import { set } from 'js-cookie';\r\nimport React, {useState,useEffect} from 'react';\r\nimport classes from './userCounter.module.css'\r\n\r\nconst UserCounter = () => {\r\n\r\n   const [counter,setCounter] = useState({Farmers: 0,Buyers: 0})\r\n   const [count,setCount] = useState(false)\r\n\r\n   useEffect(() => {\r\n\r\n    if(counter.Farmers === 0)\r\n    {\r\n\r\n        fetch(`${process.env.REACT_APP_API_URL}/users/count`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            console.log(\"data\",data)\r\n            setCounter({Farmers:data.Farmers,Buyers:data.Buyers})\r\n        })\r\n    }       \r\n   })\r\n\r\n   useEffect(() => {\r\n       console.log(\"counter in useEffect\",counter)\r\n    if(counter.Farmers !== 0 && count)\r\n    {\r\n        setCount(true)\r\n        counterFunction(\"Farmers\", 0, counter.Farmers, 3000); \r\n    }   \r\n    if(counter.Buyers !== 0 && count)\r\n    counterFunction(\"Buyers\", 0, counter.Buyers, 3000); \r\n\r\n   },[counter])\r\n\r\n   const counterFunction = (userType, start, end, duration) => {\r\n    let current = start,\r\n     range = end - start,\r\n     increment = end > start ? 1 : -1,\r\n     step = Math.abs(Math.floor(duration / range)),\r\n     timer = setInterval(() => {\r\n      current += increment;\r\n      setCounter({[userType]:current})\r\n      if (current == end) {\r\n       clearInterval(timer);\r\n      }\r\n     }, step);\r\n   }\r\n\r\n   return(\r\n       <>\r\n            <section>\r\n                <div className={classes[\"container\"]}>\r\n                    <div className={classes[\"user-container\"]}>\r\n                        <div className={classes[\"buyers\"]}>\r\n                            <p style={{textAlign:'center',fontSize:'30px'}}>Number of Buyers registered</p>\r\n                            <div className={classes[\"counter-container\"]}>\r\n                                <p className={classes[\"counter\"]} style={{textAlign:'center'}}>{counter.Buyers}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes[\"farmer\"]}>\r\n                            <p style={{textAlign:'center',fontSize:'30px'}}>Number of Farmers registered</p>\r\n                            <div className={classes[\"counter-container\"]}>\r\n                                <p className={classes[\"counter\"]} style={{textAlign:'center'}}>{counter.Farmers}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n       </>\r\n   )\r\n}\r\n\r\nexport default UserCounter","F:\\Projects\\Major Project\\major_project\\src\\components\\Navigation\\Footer\\Footer.js",["263","264","265","266"],"import React from 'react';\r\nimport classes from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return(<>\r\n            <footer className={classes[\"footer-distributed\"]}>\r\n\t\t\t<div className={classes[\"footer-left\"]}>\r\n\t\t\t\t<h3>E-coF</h3>\r\n\t\t\t\t<p className={classes[\"footer-links\"]}>\r\n\t\t\t\t\t<a href=\"/\" className={classes[\"link-1\"]}>Home</a>\r\n\t\t\t\t\t<a href=\"/products\">Products</a>\r\n\t\t\t\t\t<a href=\"/news\">News</a>\r\n\t\t\t\t\t<a href=\"/about\">About</a>\r\n\t\t\t\t\t<a href=\"/contact\">Contact</a>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className={classes[\"footer-company-name\"]}>Company Name © 2021</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes[\"footer-center\"]}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<i class=\"fa fa-map-marker\"></i>\r\n\t\t\t\t\t<p><span>NIT</span> Jalandhar, Punjab</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<i class=\"fa fa-phone\"></i>\r\n\t\t\t\t\t<p>+91 9999999999</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<i class=\"fa fa-envelope\"></i>\r\n\t\t\t\t\t<p><a href=\"mailto:support@company.com\">support@company.com</a></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes[\"footer-right\"]}>\r\n\t\t\t\t<p className={classes[\"footer-company-about\"]}>\r\n\t\t\t\t\t<span>About the company</span>\r\n                    It is an e-commerce website to provide a direct communication between the farmers and the buyers by removing the 3rd parties\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={classes[\"footer-icons\"]}>\r\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\r\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\r\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-github\"></i></a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n    </>)\r\n}\r\n\r\nexport default Footer;","F:\\Projects\\Major Project\\major_project\\src\\components\\about\\about.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\contact\\contact.js",[],"F:\\Projects\\Major Project\\major_project\\src\\components\\Home\\corousal\\corousal.js",["267","268"],"import React, { Component } from 'react';\r\nimport classes from './corousal.module.css';\r\nimport swal from 'sweetalert';\r\nimport land1 from './../../../assets/images/land7.jpg'\r\nimport land2 from './../../../assets/images/land8.jpg'\r\nimport land3 from './../../../assets/images/car3.jpeg'\r\n\r\nclass Corousal extends Component{\r\n\r\n    state = {\r\n        x: 0,\r\n        crop: [land1,land2,land3],\r\n        farmer: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            this.goLeft()\r\n        }, 4000);\r\n    }\r\n\r\n    goLeft = () => {\r\n       this.setState((preProps) => {\r\n        if(preProps.x === 0)\r\n        {\r\n            return {x:-100*(this.state.crop.length-1)}\r\n        }else{\r\n            return {x:preProps.x+100}\r\n        }\r\n       })\r\n    }\r\n\r\n    goRight = () => {\r\n        // console.log(this.state.x);\r\n        this.setState((preProps) => {\r\n            if(preProps.x === -100*(this.state.crop.length-1))\r\n            {\r\n                return {x:0}\r\n            }else{\r\n                return {x:preProps.x-100}\r\n            }\r\n        })\r\n    }\r\n\r\n   render() {\r\n       return (\r\n           <>\r\n                <div className={classes.slider}>\r\n                    {\r\n                        this.state.crop.map((item,index) => {\r\n                            // console.log(\"index\",index)\r\n                            return (\r\n                                <div key={index} className={classes.slide}\r\n                                     style={{transform:`translateX(${this.state.x}%)`}}>\r\n                                    <img src={item} className={classes.imageStyles}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <button className={classes.goLeft} onClick={this.goLeft}>\r\n                        <i class=\"fas fa-chevron-left\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                    </button>\r\n                    <button className={classes.goRight} onClick={this.goRight}>\r\n                        <i class=\"fas fa-chevron-right\" style={{fontSize:'2vw',fontWeight:'bold'}}></i>\r\n                    </button>\r\n                </div>\r\n            </>\r\n       );\r\n   }\r\n}\r\n\r\nexport default Corousal;","F:\\Projects\\Major Project\\major_project\\src\\components\\News\\NewsFilter\\NewsFilter.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":22,"column":7,"nodeType":"275","endLine":22,"endColumn":18,"suggestions":"276"},{"ruleId":"273","severity":1,"message":"277","line":24,"column":4,"nodeType":"278","endLine":24,"endColumn":13,"suggestions":"279"},{"ruleId":"273","severity":1,"message":"280","line":24,"column":14,"nodeType":"281","endLine":31,"endColumn":5},{"ruleId":"282","severity":1,"message":"283","line":56,"column":41,"nodeType":"284","endLine":56,"endColumn":78},{"ruleId":"285","severity":1,"message":"286","line":1,"column":16,"nodeType":"278","messageId":"287","endLine":1,"endColumn":24},{"ruleId":"288","severity":1,"message":"289","line":64,"column":41,"nodeType":"284","endLine":64,"endColumn":125},{"ruleId":"290","severity":1,"message":"291","line":81,"column":25,"nodeType":"284","endLine":81,"endColumn":203},{"ruleId":"292","severity":1,"message":"293","line":85,"column":41,"nodeType":"284","endLine":85,"endColumn":127},{"ruleId":"292","severity":1,"message":"293","line":92,"column":41,"nodeType":"284","endLine":92,"endColumn":121},{"ruleId":"292","severity":1,"message":"293","line":99,"column":41,"nodeType":"284","endLine":99,"endColumn":199},{"ruleId":"292","severity":1,"message":"293","line":106,"column":41,"nodeType":"284","endLine":106,"endColumn":244},{"ruleId":"292","severity":1,"message":"293","line":113,"column":41,"nodeType":"284","endLine":113,"endColumn":243},{"ruleId":"282","severity":1,"message":"294","line":120,"column":41,"nodeType":"284","endLine":120,"endColumn":90},{"ruleId":"292","severity":1,"message":"293","line":127,"column":41,"nodeType":"284","endLine":127,"endColumn":245},{"ruleId":"292","severity":1,"message":"293","line":134,"column":41,"nodeType":"284","endLine":134,"endColumn":100},{"ruleId":"282","severity":1,"message":"283","line":134,"column":41,"nodeType":"284","endLine":134,"endColumn":100},{"ruleId":"292","severity":1,"message":"293","line":141,"column":41,"nodeType":"284","endLine":141,"endColumn":130},{"ruleId":"292","severity":1,"message":"293","line":148,"column":41,"nodeType":"284","endLine":148,"endColumn":121},{"ruleId":"295","severity":1,"message":"296","line":52,"column":19,"nodeType":"297","messageId":"298","endLine":54,"endColumn":21},{"ruleId":"295","severity":1,"message":"296","line":56,"column":19,"nodeType":"297","messageId":"298","endLine":56,"endColumn":28},{"ruleId":"273","severity":1,"message":"299","line":85,"column":7,"nodeType":"275","endLine":85,"endColumn":15,"suggestions":"300"},{"ruleId":"285","severity":1,"message":"301","line":3,"column":8,"nodeType":"278","messageId":"287","endLine":3,"endColumn":12},{"ruleId":"288","severity":1,"message":"289","line":102,"column":29,"nodeType":"284","endLine":102,"endColumn":113},{"ruleId":"285","severity":1,"message":"286","line":1,"column":16,"nodeType":"278","messageId":"287","endLine":1,"endColumn":24},{"ruleId":"285","severity":1,"message":"302","line":4,"column":9,"nodeType":"278","messageId":"287","endLine":4,"endColumn":13},{"ruleId":"285","severity":1,"message":"303","line":1,"column":8,"nodeType":"278","messageId":"287","endLine":1,"endColumn":13},{"ruleId":"285","severity":1,"message":"304","line":3,"column":9,"nodeType":"278","messageId":"287","endLine":3,"endColumn":20},{"ruleId":"285","severity":1,"message":"305","line":4,"column":8,"nodeType":"278","messageId":"287","endLine":4,"endColumn":19},{"ruleId":"273","severity":1,"message":"306","line":61,"column":7,"nodeType":"275","endLine":61,"endColumn":9,"suggestions":"307"},{"ruleId":"273","severity":1,"message":"308","line":95,"column":7,"nodeType":"275","endLine":95,"endColumn":15,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":68,"column":37,"nodeType":"284","endLine":68,"endColumn":123},{"ruleId":"285","severity":1,"message":"302","line":4,"column":9,"nodeType":"278","messageId":"287","endLine":4,"endColumn":13},{"ruleId":"285","severity":1,"message":"312","line":7,"column":24,"nodeType":"278","messageId":"287","endLine":7,"endColumn":43},{"ruleId":"310","severity":1,"message":"311","line":46,"column":29,"nodeType":"284","endLine":46,"endColumn":52},{"ruleId":"285","severity":1,"message":"313","line":5,"column":8,"nodeType":"278","messageId":"287","endLine":5,"endColumn":13},{"ruleId":"285","severity":1,"message":"314","line":19,"column":12,"nodeType":"278","messageId":"287","endLine":19,"endColumn":20},{"ruleId":"273","severity":1,"message":"315","line":142,"column":7,"nodeType":"275","endLine":142,"endColumn":15,"suggestions":"316"},{"ruleId":"273","severity":1,"message":"317","line":82,"column":7,"nodeType":"275","endLine":82,"endColumn":15,"suggestions":"318"},{"ruleId":"285","severity":1,"message":"302","line":4,"column":9,"nodeType":"278","messageId":"287","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"319","line":14,"column":9,"nodeType":"278","endLine":14,"endColumn":18,"suggestions":"320"},{"ruleId":"273","severity":1,"message":"280","line":14,"column":19,"nodeType":"281","endLine":22,"endColumn":10},{"ruleId":"273","severity":1,"message":"321","line":28,"column":11,"nodeType":"275","endLine":28,"endColumn":24,"suggestions":"322"},{"ruleId":"310","severity":1,"message":"311","line":194,"column":48,"nodeType":"284","endLine":194,"endColumn":143},{"ruleId":"285","severity":1,"message":"313","line":5,"column":8,"nodeType":"278","messageId":"287","endLine":5,"endColumn":13},{"ruleId":"285","severity":1,"message":"314","line":20,"column":12,"nodeType":"278","messageId":"287","endLine":20,"endColumn":20},{"ruleId":"273","severity":1,"message":"323","line":115,"column":7,"nodeType":"275","endLine":115,"endColumn":15,"suggestions":"324"},{"ruleId":"325","severity":1,"message":"326","line":1,"column":1,"nodeType":"327","endLine":5,"endColumn":2},{"ruleId":"285","severity":1,"message":"302","line":4,"column":9,"nodeType":"278","messageId":"287","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"319","line":13,"column":5,"nodeType":"278","endLine":13,"endColumn":14,"suggestions":"328"},{"ruleId":"273","severity":1,"message":"280","line":13,"column":15,"nodeType":"281","endLine":21,"endColumn":6},{"ruleId":"273","severity":1,"message":"321","line":27,"column":7,"nodeType":"275","endLine":27,"endColumn":20,"suggestions":"329"},{"ruleId":"310","severity":1,"message":"311","line":189,"column":48,"nodeType":"284","endLine":189,"endColumn":143},{"ruleId":"285","severity":1,"message":"313","line":5,"column":8,"nodeType":"278","messageId":"287","endLine":5,"endColumn":13},{"ruleId":"285","severity":1,"message":"314","line":20,"column":10,"nodeType":"278","messageId":"287","endLine":20,"endColumn":18},{"ruleId":"273","severity":1,"message":"330","line":108,"column":5,"nodeType":"275","endLine":108,"endColumn":13,"suggestions":"331"},{"ruleId":"288","severity":1,"message":"289","line":18,"column":33,"nodeType":"284","endLine":18,"endColumn":117},{"ruleId":"310","severity":1,"message":"311","line":77,"column":37,"nodeType":"284","endLine":77,"endColumn":123},{"ruleId":"285","severity":1,"message":"332","line":1,"column":10,"nodeType":"278","messageId":"287","endLine":1,"endColumn":13},{"ruleId":"273","severity":1,"message":"333","line":38,"column":6,"nodeType":"275","endLine":38,"endColumn":15,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":48,"column":19,"nodeType":"337","messageId":"338","endLine":48,"endColumn":21},{"ruleId":"282","severity":1,"message":"283","line":38,"column":6,"nodeType":"284","endLine":38,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":39,"column":6,"nodeType":"284","endLine":39,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":40,"column":6,"nodeType":"284","endLine":40,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":41,"column":6,"nodeType":"284","endLine":41,"endColumn":18},{"ruleId":"285","severity":1,"message":"301","line":3,"column":8,"nodeType":"278","messageId":"287","endLine":3,"endColumn":12},{"ruleId":"310","severity":1,"message":"311","line":55,"column":37,"nodeType":"284","endLine":55,"endColumn":86},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect contains a call to 'setUserType'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, userType] as a second argument to the useEffect Hook.","Identifier",["342"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'callback', 'dispatch', 'isSubmitting', 'userType', 'values.email', and 'values.password'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["343"],"'swal' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","'AuthContext' is defined but never used.","'getUserData' is defined but never used.","React Hook useEffect has a missing dependency: 'values.email'. Either include it or remove the dependency array.",["344"],"React Hook useEffect has missing dependencies: 'isSubmitting', 'values.address', 'values.phoneNo', 'values.pincode', and 'values.username'. Either include them or remove the dependency array.",["345"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'createFilterOptions' is defined but never used.","'axios' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isSubmitting' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["346"],"React Hook useEffect has missing dependencies: 'callback', 'dispatch', 'isSubmitting', 'userType', 'values.email', 'values.password', 'values.phoneNo', and 'values.username'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["347"],"React Hook useEffect contains a call to 'setCropId'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [params, cropId] as a second argument to the useEffect Hook.",["348"],"React Hook useEffect has missing dependencies: 'cropId' and 'searchHandler'. Either include them or remove the dependency array.",["349"],"React Hook useEffect has missing dependencies: 'cropId', 'isSubmitting', 'setSearch', 'values.address', 'values.cropName', 'values.description', 'values.pincode', 'values.price', and 'values.weight'. Either include them or remove the dependency array. If 'setSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["350"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["351"],["352"],"React Hook useEffect has missing dependencies: 'cropId', 'isSubmitting', and 'setSearch'. Either include them or remove the dependency array. If 'setSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"'set' is defined but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["354"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"369","fix":"375"},{"desc":"371","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},"Update the dependencies array to be: [dispatch, hamburger, state]",{"range":"381","text":"382"},"Add dependencies array: [state, userType]",{"range":"383","text":"384"},"Update the dependencies array to be: [callback, dispatch, errors, isSubmitting, userType, values.email, values.password]",{"range":"385","text":"386"},"Update the dependencies array to be: [values.email]",{"range":"387","text":"388"},"Update the dependencies array to be: [errors, isSubmitting, values.address, values.phoneNo, values.pincode, values.username]",{"range":"389","text":"390"},"Update the dependencies array to be: [errors, isSubmitting, values]",{"range":"391","text":"392"},"Update the dependencies array to be: [callback, dispatch, errors, isSubmitting, userType, values.email, values.password, values.phoneNo, values.username]",{"range":"393","text":"394"},"Add dependencies array: [params, cropId]",{"range":"395","text":"396"},"Update the dependencies array to be: [cropId, paramCropId, searchHandler]",{"range":"397","text":"398"},"Update the dependencies array to be: [cropId, errors, isSubmitting, setSearch, values.address, values.cropName, values.description, values.pincode, values.price, values.weight]",{"range":"399","text":"400"},{"range":"401","text":"396"},{"range":"402","text":"398"},"Update the dependencies array to be: [cropId, errors, isSubmitting, setSearch]",{"range":"403","text":"404"},"Update the dependencies array to be: [count, counter]",{"range":"405","text":"406"},[665,676],"[dispatch, hamburger, state]",[950,950],", [state, userType]",[2692,2700],"[callback, dispatch, errors, isSubmitting, userType, values.email, values.password]",[1665,1667],"[values.email]",[2710,2718],"[errors, isSubmitting, values.address, values.phoneNo, values.pincode, values.username]",[3834,3842],"[errors, isSubmitting, values]",[2569,2577],"[callback, dispatch, errors, isSubmitting, userType, values.email, values.password, values.phoneNo, values.username]",[754,754],", [params, cropId]",[877,890],"[cropId, paramCropId, searchHandler]",[3137,3145],"[cropId, errors, isSubmitting, setSearch, values.address, values.cropName, values.description, values.pincode, values.price, values.weight]",[707,707],[810,823],[2682,2690],"[cropId, errors, isSubmitting, setSearch]",[1050,1059],"[count, counter]"]